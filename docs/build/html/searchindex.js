Search.setIndex({"docnames": ["BrainAlign", "BrainAlign.brain_analysis", "BrainAlign.brain_analysis.configs", "BrainAlign.came", "BrainAlign.came.datapair", "BrainAlign.came.model", "BrainAlign.came.model.v0", "BrainAlign.came.utils", "BrainAlign.code", "BrainAlign.code.module", "BrainAlign.code.utils", "index", "modules"], "filenames": ["BrainAlign.rst", "BrainAlign.brain_analysis.rst", "BrainAlign.brain_analysis.configs.rst", "BrainAlign.came.rst", "BrainAlign.came.datapair.rst", "BrainAlign.came.model.rst", "BrainAlign.came.model.v0.rst", "BrainAlign.came.utils.rst", "BrainAlign.code.rst", "BrainAlign.code.module.rst", "BrainAlign.code.utils.rst", "index.rst", "modules.rst"], "titles": ["BrainAlign package", "BrainAlign.brain_analysis package", "BrainAlign.brain_analysis.configs package", "BrainAlign.came package", "BrainAlign.came.datapair package", "BrainAlign.came.model package", "BrainAlign.came.model.v0 package", "BrainAlign.came.utils package", "BrainAlign.code package", "BrainAlign.code.module package", "BrainAlign.code.utils package", "Welcome to BrainAlign\u2019s documentation!", "BrainAlign"], "terms": {"brain_analysi": [0, 12], "config": [0, 1], "submodul": [0, 12], "came_config_binari": [0, 1], "heco_config": [0, 1], "heco_config_al": [0, 1], "heco_config_binari": [0, 1], "heco_config_binary_2020sa": [0, 1], "heco_config_three_2020sa": [0, 1], "sr_rsc_config_binari": [0, 1], "analysi": [0, 7, 12], "align_cross_speci": [0, 1], "analysis_express": [0, 1], "brain_region_classfi": [0, 1], "cross_evaluation_alig": [0, 1], "cross_evaluation_aligment_clust": [0, 1], "cross_evaluation_aligment_seper": [0, 1], "cross_species_binary_clust": [0, 1], "cross_species_genes_clust": [0, 1], "genes_homo_random_corr": [0, 1], "genes_homo_random_dist": [0, 1], "get_cent": [0, 1], "get_homologous_r": [0, 1], "homo_corr": [0, 1], "homo_corr_umap": [0, 1], "identify_markergen": [0, 1], "load_came_embed": [0, 1], "load_heco_embed": [0, 1], "load_homo_gen": [0, 1], "load_srrsc_embed": [0, 1], "plot_homo_random": [0, 1], "random_corr": [0, 1], "random_corr_umap": [0, 1], "spatial_align": [0, 1], "spatial_alignment_mous": [0, 1], "transform_embed": [0, 1], "ttest_homo_random": [0, 1], "umap_genes_seper": [0, 1], "umap_seper": [0, 1], "analysis_main": [0, 12], "alignment_st": [0, 1], "alignment_sts_analysi": [0, 1], "experiment_1_cross_species_clust": [0, 1], "experiment_2_umap_evalu": [0, 1], "experiment_3_homo_random": [0, 1], "experiment_4_cross_species_genes_analysi": [0, 1], "experiment_5_genes_homo_random": [0, 1], "experiment_6_brain_region_classfi": [0, 1], "experiment_7_align_cross_speci": [0, 1], "experiment_8_cross_evaluation_aligment_clust": [0, 1], "forward": [0, 1, 3, 5, 6, 7, 8, 9, 10], "init_data": [0, 1], "anatomical_sts_analysi": [0, 1], "experiment_1_palette_comparison": [0, 1], "experiment_2_spatial_alignment_specie1": [0, 1], "experiment_2_spatial_alignment_specie2": [0, 1], "anatomical_sts_analysis_fun": [0, 1], "gene_comparison": [0, 1], "local_region_analysi": [0, 1], "experiment_1_neocortex_analysi": [0, 1], "analysis_util": [0, 12], "average_express": [0, 1], "gene_module_abstract_graph": [0, 1], "get_common_special_gene_list": [0, 1], "get_expression_group": [0, 1], "get_homologous_gene_list": [0, 1], "get_homologous_mat": [0, 1], "data_util": [0, 12], "corr2_coeff": [0, 1], "generate_correlation_map": [0, 1], "num_zero_row": [0, 1], "plot_marker_selection_tsne_embed": [0, 1], "plot_marker_selection_umap": [0, 1], "plot_marker_selection_umap_embed": [0, 1], "threshold_arrai": [0, 1], "threshold_array_nonzero": [0, 1], "threshold_quantil": [0, 1], "threshold_std": [0, 1], "threshold_top": [0, 1], "train_test_val_split": [0, 1], "metric": [0, 7, 12], "pipelin": [0, 7, 12], "load_embeddings_cam": [0, 1], "load_gene_embed": [0, 1], "load_sample_embedding_concat": [0, 1], "process": [0, 3, 7, 12], "get_heco_input": [0, 1], "get_neighbor": [0, 1], "get_positive_sampl": [0, 1], "get_spatial_rel": [0, 1], "get_srrsc_input": [0, 1], "highly_variable_hvg": [0, 1], "load_embed": [0, 1], "load_sample_embed": [0, 1], "load_sample_label": [0, 1], "normalize_before_prun": [0, 1], "normalize_default": [0, 1, 3, 7], "select_deg": [0, 1], "test_inter": [0, 1], "test_norm": [0, 1], "test_prun": [0, 1], "transform_pca_embed": [0, 1], "transform_pca_embedding_np": [0, 1], "came": [0, 1, 12], "datapair": [0, 3, 7], "align": [0, 3, 5, 6, 7], "unalign": [0, 3], "model": [0, 3, 4, 7], "base_lay": [0, 3], "cgc": [0, 3], "cggc": [0, 3], "heterofram": [0, 3], "hidden": [0, 3], "loss": [0, 3, 7], "util": [0, 3, 8], "analyz": [0, 3], "base": [0, 1, 3, 4, 5, 6, 9, 10], "downsample_count": [0, 3], "evalu": [0, 3, 8], "plot": [0, 1, 3], "preprocess": [0, 3], "train": [0, 3, 4, 5, 6, 8, 9, 10], "train_v0": [0, 3], "paramet": [0, 1, 4, 5, 6, 7, 12], "get_loss_param": [0, 3], "get_model_param": [0, 3], "gather_came_result": [0, 3], "main_for_align": [0, 3], "main_for_unalign": [0, 3], "plot_class_result": [0, 3], "preprocess_align": [0, 3], "preprocess_unalign": [0, 3], "code": [0, 4, 7, 12], "contrast": [0, 8], "heco": [0, 8], "mp_encod": [0, 8], "sc_encod": [0, 8], "load_data": [0, 8], "logger": [0, 1, 8], "logreg": [0, 8], "param": [0, 8], "main": [0, 3, 7, 12], "main_heco": [0, 12], "run_heco": [0, 8], "main_parallel": [0, 12], "predict": [0, 3, 7, 12], "cfg": [1, 8, 10], "step": [1, 3], "1": [1, 3, 4, 5, 6, 7], "comput": [1, 3, 5, 6, 7, 9, 10], "averag": [1, 4, 5, 7], "embed": [1, 5, 6, 7], "everi": [1, 5, 6, 7, 9, 10], "region": 1, "two": [1, 3, 4, 5, 6, 7], "speci": [1, 3, 7], "us": [1, 3, 4, 5, 6, 7], "dict": [1, 3, 4, 5, 6, 7], "store": [1, 3, 5, 6, 7], "2": [1, 3, 4, 5, 6, 7], "similar": [1, 3, 5, 7], "matrix": [1, 3, 4, 5, 6, 7, 10], "np": [1, 7], "arrai": [1, 7], "3": [1, 4, 5, 6, 7], "heatmap": [1, 3, 7], "metric_nam": 1, "euclidean": 1, "point": [1, 7], "max_subset_num": 1, "mouse_64_labels_list": 1, "human_88_labels_list": 1, "mouse_overlap_df": 1, "human_overlap_df": 1, "homo_region_mouse_human_dict": 1, "load": [1, 3, 4, 7], "human": [1, 7], "mous": [1, 7], "cross": [1, 3, 4, 5, 6, 7], "express": [1, 3, 4, 5, 6, 7], "data": [1, 3, 4, 5, 6, 7, 10], "homolog": [1, 4, 7], "random": [1, 7], "bar": [1, 7], "mean": [1, 5, 6, 7], "std": 1, "posit": [1, 5, 6, 7], "distanc": [1, 7], "between": [1, 3, 4, 5, 6, 7], "select": [1, 3], "one": [1, 3, 4, 5, 6, 7, 9, 10], "nearest": [1, 3], "neighbor": [1, 3, 7], "each": [1, 3, 4, 5, 6, 7], "correl": 1, "boxplot": 1, "mat": [1, 7], "m_embed": 1, "add": [1, 3, 5, 6], "denomin": 1, "avoid": [1, 7], "infinit": 1, "valu": [1, 4, 5, 6, 7], "class": [1, 3, 4, 5, 6, 7, 9, 10], "object": [1, 3, 4, 5, 6, 7], "adata": [1, 3, 4, 7], "anndata": [1, 3, 4, 7], "gene": [1, 3, 4, 5, 6, 7], "list": [1, 3, 4, 5, 6, 7], "adata_gene_embed": 1, "save_path": 1, "fig_format": 1, "key_class": [1, 3, 7], "resolut": 1, "0": [1, 3, 4, 5, 6, 7], "5": [1, 3, 4, 5, 6, 7], "umap_min_dist": 1, "85": [1, 7], "umap_n_neighbor": 1, "30": [1, 3, 5, 7], "gene_list_mous": 1, "gene_list_human": 1, "gene_name_mouse_list": 1, "gene_name_human_list": 1, "mh_matrix": 1, "corr_matrix": 1, "groupbi": [1, 7], "gene_nam": 1, "mh_mat": 1, "homologous_pair_mous": 1, "homologous_pair_human": 1, "A": [1, 3, 4, 5, 6, 7], "b": [1, 7], "x": [1, 5, 6, 7], "y": [1, 7], "n": [1, 5, 7], "m": [1, 7, 9, 10], "shape": [1, 3, 4, 5, 7], "t": [1, 3, 5, 6, 7], "return": [1, 3, 4, 5, 6, 7], "which": [1, 3, 4, 5, 6, 7], "element": [1, 3, 7], "i": [1, 3, 4, 5, 6, 7], "coeffici": 1, "type": [1, 3, 4, 5, 6, 7], "marker": [1, 7], "name": [1, 3, 4, 5, 6, 7, 10], "perplex": 1, "40": 1, "umap_neighbor": 1, "input": [1, 3, 4, 5, 6, 7], "row": [1, 7, 10], "sampl": [1, 4, 7], "column": [1, 3, 4, 7], "vector": [1, 7], "output": [1, 3, 5, 6, 7], "binari": [1, 5, 6, 7], "For": [1, 5, 6, 7], "j": 1, "m_ij": 1, "avg": [1, 7], "column_j": 1, "quantil": 1, "8": [1, 5, 7], "std_time": 1, "percent": 1, "data_x": 1, "data_i": 1, "train_ratio": 1, "validation_ratio": 1, "test_ratio": 1, "random_st": [1, 7], "mouse_gene_list": 1, "human_gene_list": 1, "mouse_sample_list": 1, "human_sample_list": 1, "sm_": 1, "filenam": 1, "target_node_num": 1, "neibor_node_num": 1, "meta_path_list": 1, "target_nod": [1, 10], "_adata": 1, "hvg_kwd": [1, 7], "get": [1, 3, 4, 5, 6, 7], "graph": [1, 3, 4, 5, 6, 7], "g_mous": 1, "g_human": 1, "from": [1, 3, 4, 5, 6, 7], "init": 1, "filter": [1, 3, 7], "origin": [1, 3, 7], "via": 1, "acquir": 1, "m_mous": 1, "m_human": 1, "mouse_region_list": 1, "method": [1, 5, 6, 7], "default": [1, 3, 4, 5, 6, 7], "target_sum": [1, 7], "none": [1, 3, 4, 5, 6, 7], "axi": [1, 7], "force_return": [1, 7], "true": [1, 3, 4, 5, 6, 7, 9, 10], "copi": [1, 5, 6, 7], "bool": [1, 3, 4, 5, 6, 7, 9, 10], "fals": [1, 3, 4, 5, 6, 7], "log_onli": [1, 7], "normal": [1, 3, 4, 5, 6, 7, 10], "dataset": [1, 3, 4, 7, 10], "set": [1, 3, 4, 5, 6, 7], "total": [1, 4, 7], "count": [1, 7], "follow": [1, 3, 5, 6, 7], "log": [1, 7], "transform": [1, 3, 4, 5, 6, 7], "scale": [1, 3, 4, 7], "factor": [1, 3, 7], "whether": [1, 3, 4, 5, 6, 7], "skip": [1, 3, 7], "onli": [1, 3, 4, 5, 6, 7], "perform": [1, 5, 6, 7, 9, 10], "even": [1, 7], "chang": [1, 3, 5, 6, 7], "ar": [1, 3, 4, 5, 6, 7], "made": [1, 5, 6, 7], "number": [1, 3, 4, 5, 6, 7], "dimens": [1, 4, 5, 6, 7], "aligneddatapair": [3, 4, 7], "g": [3, 4, 5, 6, 7], "etyp": [3, 4, 5, 6], "get_feature_dict": [3, 4, 7], "get_obs_anno": [3, 4], "get_obs_dataset": [3, 4], "get_obs_featur": [3, 4], "get_obs_id": [3, 4], "get_obs_label": [3, 4], "get_whole_net": [3, 4, 7], "label": [3, 4, 5, 6, 7, 10], "make_ov_adj": [3, 4], "make_whole_net": [3, 4], "n_feat": [3, 4], "n_ob": [3, 4, 7], "n_obs1": [3, 4], "n_obs2": [3, 4], "n_vnode": [3, 4], "ntype": [3, 4, 7], "obs_id": [3, 4], "obs_ids1": [3, 4, 7], "obs_ids2": [3, 4, 7], "oo_adj": [3, 4], "ov_adj": [3, 4, 5, 6], "save_init": [3, 4], "set_common_obs_anno": [3, 4], "set_dataset_nam": [3, 4], "set_etyp": [3, 4], "set_featur": [3, 4], "set_ntyp": [3, 4], "set_obs_df": [3, 4], "set_oo_adj": [3, 4], "set_ov_adj": [3, 4], "set_varnames_nod": [3, 4], "summary_graph": [3, 4], "varnames_feat": [3, 4], "varnames_nod": [3, 4], "vnode_id": [3, 4], "aligned_datapair_from_adata": [3, 4], "feat_names1": [3, 4], "feat_names2": [3, 4], "get_vnode_id": [3, 4], "get_vnode_ids_by_nam": [3, 4], "get_vnode_nam": [3, 4], "n_vnodes1": [3, 4], "n_vnodes2": [3, 4], "set_var_df": [3, 4], "set_vnode_anno": [3, 4], "set_vv_adj": [3, 4], "var_ids1": [3, 4], "var_ids2": [3, 4], "vnode_names1": [3, 4], "vnode_names2": [3, 4], "vv_adj": [3, 4, 5, 6], "datapair_from_adata": [3, 4], "make_featur": [3, 4], "v0": [3, 5], "basemixconvlay": [3, 5], "apply_out": [3, 5], "build_bias": [3, 5], "build_layernorm": [3, 5], "build_mix_conv": [3, 5], "generalrgclay": [3, 5, 6], "graphattentionlay": [3, 5], "reset_paramet": [3, 5], "graphconvlay": [3, 5], "weight": [3, 4, 5, 6, 7], "bia": [3, 5, 6, 9], "extra_repr": [3, 5], "heterolayernorm": [3, 5], "relgraphconvlay": [3, 5], "cgcnet": [3, 5, 6, 7], "detach2numpi": [3, 5, 6], "cggcnet": [3, 5, 6, 7], "get_attent": [3, 5, 6], "get_classification_loss": [3, 5, 6], "get_hidden_st": [3, 5, 6], "get_out_logit": [3, 5, 6], "get_sampl": [3, 5], "heterographconv": [3, 5, 6], "mod": [3, 5, 6], "hiddenrgcn": [3, 5, 6], "hiddenrrgcn": [3, 5, 6], "labelsmoothingcrossentropi": [3, 5, 6], "ce_loss_with_rdrop": [3, 5, 6], "classification_loss": [3, 5, 6], "compute_kl_loss": [3, 5, 6], "cross_entropy_loss": [3, 5, 6], "multilabel_binary_cross_entropi": [3, 5, 6], "abstract_nod": [3, 7], "abstract_ov_edg": [3, 7], "abstract_vv_edg": [3, 7], "adata_subgroup_edg": [3, 7], "adj_to_edg": [3, 7], "aggregate_link": [3, 7], "arrange_contingency_mat": [3, 7], "compare_deg_dict": [3, 7], "compare_degs_adata": [3, 7], "compare_degs_seurat": [3, 7], "compare_modul": [3, 7], "compute_common_priv": [3, 7], "edges_from_adata": [3, 7], "export_neighbor_subgraph_df": [3, 7], "export_subgraph_df": [3, 7], "get_adata_neighbor": [3, 7], "load_dpair_and_model": [3, 7], "make_abstracted_graph": [3, 7], "make_nx_input_from_df": [3, 7], "module_enrichment_for_class": [3, 7], "module_homo_weight": [3, 7], "neighbor_induced_edgedf": [3, 7], "neighbor_induced_subgraph": [3, 7], "nx_from_adata": [3, 7], "nx_multipartite_graph": [3, 7], "nx_neighbor": [3, 7], "nx_to_df": [3, 7], "nx_to_nodedf": [3, 7], "set_precomputed_neighbor": [3, 7], "weight_linked_var": [3, 7], "weight_linked_vars_by_expr": [3, 7], "weight_normalize_by_s": [3, 7], "wrapper_confus_mat": [3, 7], "wrapper_contingency_mat": [3, 7], "check_dir": [3, 7], "dec_timewrapp": [3, 7], "dict_struct": [3, 7], "dict_to_pair": [3, 7], "load_json_dict": [3, 7], "load_pickl": [3, 4, 7], "make_nowtime_tag": [3, 7], "make_pairs_from_list": [3, 7], "map_by_sm": [3, 7], "pairs_to_dict": [3, 7], "save_json_dict": [3, 7], "save_pickl": [3, 7], "split_df": [3, 7], "strline": [3, 7], "subsample_each_group": [3, 7], "subsample_singl": [3, 7], "write_info": [3, 7], "downsample_counts_per_cel": [3, 7], "downsample_total_count": [3, 7], "accuraci": [3, 7], "get_ami": [3, 7], "get_f1_scor": [3, 7], "adata_embed_with_valu": [3, 7], "alluvial_plot": [3, 7], "diy_cmap_grey_bg": [3, 7], "embed_with_valu": [3, 7], "embedding_mock3d": [3, 7], "get_color": [3, 7], "grid_bars_display_proba": [3, 7], "grid_bars_display_probas_transpos": [3, 7], "grid_display_proba": [3, 7], "heatmap_proba": [3, 7], "multipartite_layout": [3, 7], "plot_confus_mat": [3, 7], "plot_confus_multi_mat": [3, 7], "plot_contingency_mat": [3, 7], "plot_distance_lin": [3, 7], "plot_edges_by_adj": [3, 7], "plot_line_list": [3, 7], "plot_mapped_graph": [3, 7], "plot_multipartite_graph": [3, 7], "plot_records_for_train": [3, 7], "plot_splitted_umap": [3, 7], "plot_stacked_bar": [3, 7], "rescale_layout": [3, 7], "rotate_xticklabel": [3, 7], "rotate_yticklabel": [3, 7], "sorted_scatt": [3, 7], "triple_umap": [3, 7], "umap_grid": [3, 7], "umap_with_annot": [3, 7], "venn_plot": [3, 7], "view_color_map": [3, 7], "wrapper_heatmap_scor": [3, 7], "adjacenttran": [3, 4, 7], "from_edge_df": [3, 7], "reduce_to_align": [3, 7], "reduce_to_align_featur": [3, 7], "adata_from_raw": [3, 7], "add_column": [3, 7], "add_new_edgetype_to_dglgraph": [3, 7], "add_obs_anno": [3, 7], "add_var_anno": [3, 7], "agg_group_edg": [3, 7], "align_adata_var": [3, 7], "all_vars_of_adata": [3, 7], "augment_repeat_adata": [3, 7], "bisplit_adata": [3, 7], "change_nam": [3, 7], "compute_and_get_deg": [3, 7], "compute_unkn_r": [3, 7], "compute_unkn_rate_for2": [3, 7], "describe_mat": [3, 7], "describe_mat_nnz": [3, 7], "dict_has_kei": [3, 7], "filter_mitogen": [3, 7], "get_homologi": [3, 7], "get_homologu": [3, 7], "get_hvg": [3, 7], "get_marker_info_t": [3, 7], "get_marker_name_t": [3, 7], "get_scnet": [3, 7], "group_mean": [3, 7], "group_mean_adata": [3, 7], "group_mean_dens": [3, 7], "group_mean_multiadata": [3, 7], "group_mean_spars": [3, 7], "group_median_dens": [3, 7], "group_value_count": [3, 7], "group_zscor": [3, 7], "group_zscore_adata": [3, 7], "homograph_from_scipi": [3, 7], "is1v1pair": [3, 7], "is_symetr": [3, 7], "label_binarize_each": [3, 7], "load_dens": [3, 7], "load_namelist": [3, 7], "load_spars": [3, 7], "make_adata": [3, 7], "make_bipartite_adj": [3, 7], "make_dict_from_str": [3, 7], "make_id_name_map": [3, 7], "mean_of_nozero": [3, 7], "merge_adata_group": [3, 7], "merge_adata": [3, 7], "merge_group_label": [3, 7], "merge_meta": [3, 7], "merge_named_matric": [3, 7], "mtx2df": [3, 7], "normalize_col": [3, 7], "normalize_log_then_tot": [3, 7], "normalize_max": [3, 7], "normalize_maxmin": [3, 7], "normalize_norm": [3, 7], "normalize_row": [3, 7], "order_contingency_mat": [3, 7], "pivot_df_to_spars": [3, 7], "pivot_to_spars": [3, 7], "quick_pre_clust": [3, 7], "quick_pre_vi": [3, 7], "quick_preprocess": [3, 7], "regu_gnam": [3, 7], "remove_adata_group": [3, 7], "remove_adata_small_group": [3, 7], "remove_small_group": [3, 7], "reverse_dict": [3, 7], "reverse_dict_of_list": [3, 7], "save_mtx2df": [3, 7], "save_named_mtx": [3, 7], "save_namelist": [3, 7], "scipy_edge_dict_for_dgl": [3, 7], "split_adata": [3, 7], "subset_match": [3, 7], "take_1v1_match": [3, 7], "take_adata_group": [3, 7], "take_freq1": [3, 7], "take_freq1mor": [3, 7], "take_group_label": [3, 7], "top_markers_from_adata": [3, 7], "top_markers_from_df": [3, 7], "top_markers_from_info": [3, 7], "unpack_dict_of_list": [3, 7], "wrapper_norm": [3, 7], "wrapper_scal": [3, 7], "zscore": [3, 7], "trainer": [3, 7], "evaluate_metr": [3, 7], "get_current_output": [3, 7], "log_info": [3, 7], "plot_class_acc": [3, 7], "plot_class_loss": [3, 7], "plot_cluster_index": [3, 7], "set_class_weight": [3, 7], "train_minibatch": [3, 7], "infer_for_nod": [3, 7], "make_class_weight": [3, 7], "order_by_id": [3, 7], "prepare4train": [3, 7], "seed_everyth": [3, 7], "creat": [3, 4, 5, 6, 7], "sun": [3, 4, 5, 6, 7], "apr": [3, 5, 6, 7], "11": [3, 5, 6, 7], "22": [3, 4, 7], "13": [3, 7], "17": 3, "2021": [3, 5, 6, 7], "author": [3, 4, 5, 6, 7], "xingyan": [3, 4, 5, 6, 7], "liu": [3, 4, 5, 6, 7], "note": [3, 4, 5, 6, 7], "do": [3, 5, 6, 7], "NOT": [3, 5, 6, 7], "thi": [3, 4, 5, 6, 7, 9, 10], "file": [3, 4, 7], "directli": [3, 5, 6], "exampl": [3, 4, 5, 6, 7], "params_pr": 3, "get_preprocess_param": 3, "params_model": 3, "params_loss": 3, "kwd": [3, 4, 5, 6, 7], "kwdict_outgat": [3, 5, 6], "tue": [3, 4, 5, 6, 7], "20": [3, 5, 6, 7], "08": [3, 7], "dpair": [3, 4, 7], "sequenc": [3, 4, 5, 6, 7], "kei": [3, 4, 5, 6, 7], "str": [3, 4, 5, 6, 7], "keys_compar": 3, "resdir": 3, "path": [3, 4, 7, 10], "checkpoint": [3, 7], "int": [3, 4, 5, 6, 7], "best": 3, "batch_siz": [3, 7], "save_hidden_list": 3, "save_dpair": 3, "pack": [3, 7], "function": [3, 5, 6, 7, 9, 10], "given": [3, 4, 5, 7], "cell": [3, 4, 5, 6, 7], "includ": [3, 4, 5, 6, 7], "probabl": [3, 7], "logit": [3, 5, 6, 7], "state": [3, 5, 6, 7], "both": [3, 4, 5, 6, 7], "make": [3, 4, 5, 6, 7], "predictor": 3, "mai": [3, 4, 5, 6, 7], "after": [3, 4, 5, 6, 7], "pass": [3, 5, 6, 7, 9, 10], "through": [3, 7], "space": [3, 7], "pair": [3, 4, 5, 6, 7], "like": [3, 5, 6, 7], "key_class1": 3, "key_class2": 3, "where": [3, 4, 5, 7], "refer": [3, 4, 7], "queri": [3, 4, 7], "can": [3, 5, 6, 7], "These": 3, "extract": [3, 4, 7], "ref": 3, "ob": [3, 4, 7], "just": 3, "comparison": 3, "celltyp": [3, 7], "result": [3, 5, 6, 7], "directori": [3, 7], "specifi": [3, 4, 5, 6, 7], "adopt": 3, "candid": [3, 4], "last": [3, 5, 6], "an": [3, 5, 6, 7], "integ": [3, 7], "when": [3, 5, 6, 7], "your": 3, "gpu": [3, 7], "memori": 3, "limit": 3, "save": [3, 4, 7], "hidden_list": 3, "h5": 3, "datapair_init": [3, 4], "pickl": [3, 4, 7], "vars_feat": [3, 4], "vars_as_nod": [3, 4], "scnet": 3, "spmatrix": [3, 4, 7], "dataset_nam": [3, 4], "cell_ontology_class": [3, 7], "do_norm": [3, 7], "batch_kei": [3, 4, 7], "n_epoch": [3, 7], "350": [3, 7], "tag_data": 3, "params_lossfunc": [3, 7], "n_pass": [3, 7], "100": [3, 7], "pred_batch_s": 3, "auto": [3, 7], "plot_result": 3, "norm_target_sum": 3, "float": [3, 5, 6, 7], "device_id": 3, "run": [3, 4, 5, 6, 7, 9, 10], "integr": 3, "featur": [3, 4, 5, 6, 7, 10], "e": [3, 4, 5, 6, 7], "sc": [3, 4, 7], "raw": [3, 4, 7], "string": [3, 5, 6, 7], "variabl": [3, 4, 7], "taken": [3, 4, 7], "node": [3, 4, 5, 6, 7], "observ": [3, 4, 7], "singl": [3, 4, 5, 7], "network": [3, 4, 5, 6, 7], "merg": [3, 4, 7], "tupl": [3, 4, 5, 6, 7, 10], "respect": [3, 7], "should": [3, 4, 5, 6, 7, 9, 10], "option": [3, 4, 5, 6, 7], "provid": [3, 4, 5, 6, 7], "thei": [3, 7], "have": [3, 5, 6, 7], "alreadi": [3, 7], "been": [3, 7], "batch": [3, 7], "data1": [3, 7], "data2": [3, 7], "within": [3, 4, 5, 6, 7, 9, 10], "epoch": [3, 7], "recommend": 3, "200": 3, "400": 3, "whole": [3, 4, 7], "80": 3, "sub": [3, 5, 6, 7], "tag": [3, 7], "backup": [3, 7], "until": 3, "mini": [3, 7], "size": [3, 5, 7], "automat": [3, 7], "classif": [3, 7], "librari": 3, "all": [3, 4, 5, 6, 7, 9, 10], "layer": [3, 5, 6, 7], "df_varmap": [3, 4], "datafram": [3, 4, 7], "df_varmap_1v1": [3, 4, 7], "union_var_nod": [3, 4], "union_node_feat": [3, 4], "keep_non1v1_feat": [3, 4], "col_weight": [3, 4, 7], "non1v1_trans_to": [3, 4], "differenti": [3, 4], "highli": [3, 4, 7], "pd": [3, 4, 7], "least": [3, 4, 7], "requir": [3, 7], "relationship": [3, 4], "adjac": [3, 4, 7, 10], "contain": [3, 4, 5, 7], "correspond": [3, 4, 5, 6, 7], "infer": [3, 4], "take": [3, 4, 5, 6, 7, 9, 10], "union": [3, 4, 5, 7], "account": [3, 4], "non": [3, 4, 7], "1v1": [3, 4], "If": [3, 4, 5, 6, 7], "most": [3, 7], "homologi": [3, 4, 7], "better": [3, 7], "direct": [3, 4, 5, 7], "either": [3, 4, 5, 6], "ignor": [3, 4, 5, 6, 7, 9, 10], "key_tru": 3, "key_pr": 3, "figdir": 3, "windowspath": [3, 7], "acc_tag": 3, "df_prob": 3, "_core": [3, 7], "panda": [3, 7], "core": [3, 7], "frame": [3, 7], "use_scnet": 3, "n_pc": [3, 7], "nneigh_scnet": 3, "nneigh_clust": 3, "deg_cut": 3, "ntop_deg": 3, "50": [3, 5, 7], "ntop_deg_nod": 3, "key_clust": [3, 7], "clust_lb": [3, 7], "node_sourc": 3, "hvg": [3, 7], "deg": [3, 4, 7], "ext_feat": 3, "ext_nod": 3, "n_top_gen": [3, 7], "2000": [3, 7], "pre": [3, 7], "cluster": [3, 7], "map": [3, 4, 5, 7], "edg": [3, 4, 5, 6, 7], "pc": 3, "cut_padj": [3, 7], "cut_pt": [3, 7], "cut_logfc": [3, 7], "top": [3, 7], "per": [3, 7], "By": [3, 7], "": [3, 4, 5, 7, 10], "sourc": [3, 4, 5, 6, 7], "extra": [3, 5, 6], "ad": [3, 5, 7], "ones": [3, 5, 6, 7], "came_input": 3, "adata1": [3, 4, 7], "adata2": [3, 4, 7], "un": [3, 4, 7], "some": [3, 5, 6, 7], "them": [3, 5, 6, 7, 9, 10], "could": 3, "mani": 3, "displai": [3, 7], "umap": [3, 7], "sep": [4, 7], "15": [4, 7], "10": [4, 7], "55": 4, "2020": [4, 5, 7], "ndarrai": [4, 5, 6, 7], "obs_df": 4, "var_df": 4, "make_graph": 4, "omic": 4, "matric": [4, 7], "common": [4, 7], "feratur": 4, "n_featur": [4, 7], "spars": [4, 5, 6, 7, 10], "treat": 4, "other": [4, 5, 6, 7], "word": [4, 5, 6, 7], "heterograph": [4, 5, 6], "construct": [4, 7], "features1": 4, "features2": 4, "ov_adj1": 4, "ov_adj2": 4, "vars_nod": 4, "obs1": 4, "obs2": 4, "properti": [4, 7], "The": [4, 5, 6, 7], "structur": [4, 7], "dgl": [4, 5, 6, 7], "uniqu": [4, 7], "unknown": [4, 7], "ani": [4, 5, 6, 7], "oo": 4, "similar_to": 4, "ov": 4, "vo": 4, "expressed_bi": [4, 5, 6], "astensor": [4, 7], "unit_var": [4, 7], "concat": [4, 7], "annot": [4, 7], "clip": [4, 7], "clip_rang": [4, 7], "indic": [4, 7], "choic": 4, "id": [4, 7], "train_us": 4, "add_unknown_forc": 4, "asint": 4, "split": [4, 7], "name_unknown": 4, "categori": [4, 7], "set_attr": 4, "accord": 4, "na": 4, "rebuild": 4, "would": [4, 7], "supervis": 4, "inform": [4, 7], "static": [4, 5, 6, 7], "fp": [4, 7], "selfloop_o": 4, "selfloop_v": 4, "hetero": 4, "o": [4, 7], "v": [4, 7], "reload": 4, "adpair": 4, "element_dict": 4, "df": [4, 7], "ignore_index": [4, 7], "kwanno": [4, 7], "share": [4, 5, 6, 7], "self": [4, 5, 6], "across": [4, 5, 6, 7], "index": [4, 7, 11], "build": [4, 7], "so": [4, 5, 6, 7], "pleas": [4, 7], "sure": [4, 5, 6], "differentail": 4, "same": [4, 5, 6, 7], "discrimin": 4, "fri": [4, 7], "aug": [4, 5, 7], "28": [4, 7], "23": [4, 7], "57": 4, "02": [4, 7], "specei": 4, "scipi": [4, 7, 10], "concaten": [4, 7], "length": [4, 5, 6, 7], "v_nodes2": 4, "vnodes1": 4, "vnodes2": 4, "df1": [4, 7], "df2": [4, 7], "vv": 4, "homolog_with": [4, 5, 6], "am": 4, "ident": [4, 7], "var": [4, 7], "varlist": 4, "unseen": 4, "nan": 4, "rm_unseen": 4, "look": 4, "up": 4, "tolist": [4, 7], "link2ord": 4, "bipartit": [4, 7], "privat": [4, 7], "done": [4, 7], "var1": [4, 7], "var2": [4, 7], "force_reset": 4, "connect": [4, 5, 6, 7], "with_single_vnod": 4, "varibal": 4, "ocur": 4, "hvgs1": 4, "hvgs2": 4, "homo_gene_match": 4, "vars1": [4, 7], "vars2": [4, 7], "keep_non1v1": 4, "decid": [4, 7], "tran": 4, "pp": [4, 7], "dec": [4, 5, 7], "27": [4, 5, 7], "21": [4, 5, 7], "59": [4, 5, 6, 7], "44": [4, 5, 7], "mon": 5, "24": 5, "00": [5, 7], "14": [5, 6, 7], "in_dim_dict": [5, 6], "out_dim_dict": 5, "mod_kwdict": 5, "activ": [5, 6], "self_loop": [5, 7], "layernorm_ntyp": [5, 6], "dropout": [5, 6], "aggreg": [5, 6], "sum": [5, 6, 7], "basic": [5, 7], "convolut": [5, 6], "canonical_etyp": [5, 6], "ntype_scr": 5, "ntype_dst": 5, "access": [5, 6, 7], "dglheterograph": [5, 6, 7], "kind": [5, 7], "kwdict": 5, "gat": 5, "gcn": [5, 8, 9], "gnn": 5, "empti": 5, "built": [5, 7], "defaut": 5, "callabl": [5, 6, 7], "rate": [5, 6, 7], "reduc": [5, 7], "messag": [5, 6], "differ": [5, 6, 7], "relat": [5, 6], "h_dict": [5, 6], "elementwise_affin": 5, "form": [5, 7], "mod_kind": 5, "s_ntype": 5, "d_ntype": 5, "h_dim": [5, 6], "16": [5, 6, 7], "n_head": 5, "feat_drop": [5, 9], "05": [5, 6, 7], "attn_drop": [5, 9], "6": [5, 7], "negative_slop": [5, 6], "torch": [5, 6, 7, 10], "tensor": [5, 6, 7, 10], "compat": 5, "new": [5, 6, 7], "norm": [5, 6, 7], "right": [5, 6, 7], "use_weight": [5, 6], "batchnorm_ntyp": [5, 6], "dropout_feat": [5, 6], "variant": 5, "rgcn": 5, "allow": [5, 6, 7], "left": [5, 6, 7], "linear": [5, 6], "appli": [5, 6, 7], "static_wdict": 5, "modifi": [5, 7], "subset": [5, 7], "w": 5, "n_edg": [5, 7], "extern": 5, "intrins": 5, "trainabl": 5, "in_dim": 5, "out_dim": [5, 6], "residu": [5, 6], "attn_typ": 5, "mul": 5, "heads_fus": 5, "version": 5, "nn": [5, 6], "gatconv": 5, "attent": [5, 6, 8, 9], "asymmetr": 5, "destin": [5, 6], "feat": [5, 7, 9], "return_attn": 5, "dglgraph": [5, 6], "d_": 5, "must": [5, 6, 7], "n_": 5, "in_": 5, "src": 5, "out": [5, 7], "dst": 5, "h": [5, 9], "head": 5, "reiniti": 5, "learnabl": 5, "graphconv": [5, 6], "while": [5, 6, 7, 9, 10], "how": 5, "divid": 5, "degre": 5, "equival": [5, 6], "receiv": 5, "c_": 5, "ij": 5, "paper": 5, "otherwis": [5, 7], "without": [5, 6, 7], "updat": [5, 6, 7], "represent": [5, 6, 10], "come": 5, "effect": 5, "print": [5, 6, 7], "static_weight": 5, "layernorm": [5, 6], "defin": [5, 6, 9, 10], "call": [5, 6, 9, 10], "overridden": [5, 6, 9, 10], "subclass": [5, 6, 9, 10], "although": [5, 6, 9, 10], "recip": [5, 6, 9, 10], "need": [5, 6, 7, 9, 10], "instanc": [5, 6, 9, 10], "afterward": [5, 6, 9, 10], "instead": [5, 6, 7, 9, 10], "sinc": [5, 6, 9, 10], "former": [5, 6, 9, 10], "care": [5, 6, 9, 10], "regist": [5, 6, 9, 10], "hook": [5, 6, 9, 10], "latter": [5, 6, 9, 10], "silent": [5, 6, 9, 10], "rel_nam": 5, "num_bas": 5, "loop": 5, "mar": [5, 6], "kwarg": [5, 6, 7], "neural": [5, 6, 7], "heterogen": [5, 6], "self_loop_cel": [5, 6], "ey": [5, 6], "n_cell": [5, 6], "share_hidden_weight": [5, 6], "cell_classifi": [5, 6], "g_or_canonical_etyp": [5, 6], "node_type_sourc": [5, 6], "edge_typ": [5, 6], "node_type_destin": [5, 6], "h_dim_add": [5, 6], "befor": [5, 6, 7], "classifi": [5, 6], "num_hidden_lay": [5, 6], "neg": [5, 6], "slope": [5, 6], "leakyrelu": [5, 6], "batchnorm": [5, 6], "out_bia": [5, 6], "rel_names_out": [5, 6], "attn_out": [5, 6], "share_layernorm": [5, 6], "oper": [5, 6], "help": [5, 6], "transfer": [5, 6], "learn": [5, 6], "scenario": [5, 6, 7], "sat": [5, 6, 7], "18": [5, 6], "29": [5, 6], "32": [5, 6, 7], "n_gnode": [5, 6], "seem": [5, 6], "work": [5, 6, 7], "feat_dict": [5, 6, 7], "other_input": [5, 6, 7], "fuse": [5, 6], "out_cel": [5, 6], "smooth": [5, 6], "smooth_ep": [5, 6], "smooth_reduct": [5, 6], "i_lay": [5, 6], "detach2np": [5, 6], "detach": [5, 6], "numpi": [5, 6, 7], "k_each_etyp": 5, "fanout": 5, "gener": [5, 6, 7], "associ": [5, 6], "read": [5, 6, 7], "write": [5, 6], "multipl": [5, 6, 7], "ha": [5, 6, 7], "three": [5, 6], "import": [5, 6, 7], "user": [5, 6], "edges1": [5, 6], "plai": [5, 6], "game": [5, 6], "edges2": [5, 6], "sell": [5, 6], "edges3": [5, 6], "pytorch": [5, 6], "dglnn": [5, 6], "conv": [5, 6], "sageconv": [5, 6], "th": [5, 6], "h1": [5, 6], "randn": [5, 6], "number_of_nod": [5, 6], "h2": [5, 6], "dict_kei": [5, 6], "becaus": [5, 6], "summat": [5, 6, 7], "here": [5, 6], "f1": [5, 6], "f2": [5, 6], "g1": [5, 6], "g2": [5, 6], "also": [5, 6, 7], "invok": [5, 6], "x_src": [5, 6], "x_dst": [5, 6], "y_dst": [5, 6], "first": [5, 6, 7], "argument": [5, 6, 7], "its": [5, 6, 7], "second": [5, 6, 7], "repres": [5, 6, 7], "max": [5, 6, 7], "min": [5, 6, 7], "stack": [5, 6, 7], "along": [5, 6], "whose": [5, 6, 7], "order": [5, 6, 7], "determinist": [5, 6], "custom": [5, 6], "def": [5, 6], "my_agg_func": [5, 6], "dsttype": [5, 6], "dim": [5, 6], "mod_arg": [5, 6], "mod_kwarg": [5, 6], "42": [5, 6], "39": [5, 6], "activate_out": [5, 6], "No": [5, 6], "g_or_block": [5, 6], "46": [5, 6], "19": [5, 6, 7], "ep": [5, 6, 7], "reduct": [5, 6], "target": [5, 6, 7], "logits1": [5, 6], "logits2": [5, 6], "train_idx": [5, 6, 7], "alpha": [5, 6, 7], "loss_fn": [5, 6], "labels_1hot": [5, 6], "beta": [5, 6], "p": [5, 6, 7, 9], "q": [5, 6], "pad_mask": [5, 6], "multi": [5, 6, 7], "entropi": [5, 6], "softmax": [5, 6], "dimension": [5, 6, 7], "hot": [5, 6], "nov": 7, "downstream": 7, "biolog": 7, "group_ord": 7, "key_count": 7, "key_ident": 7, "key_orig": 7, "key_tag": 7, "return_df": 7, "attr": 7, "group": 7, "abstract": 7, "attribut": 7, "further": 7, "networkx": 7, "add_nodes_from": 7, "identifi": 7, "current": 7, "df_node": 7, "nx": 7, "node_attr": 7, "avg_expr": 7, "var_label": 7, "norm_method": 7, "norm_axi": 7, "tag_var": 7, "tag_ob": 7, "cut": 7, "norm_first": 7, "global_adjust": 7, "return_full_adj": 7, "z": 7, "maxmin": 7, "df_link": 7, "var_labels1": 7, "seri": 7, "var_labels2": 7, "norm_siz": 7, "global_norm_func": 7, "key_weight": 7, "keys_link": 7, "tag_var1": 7, "tag_var2": 7, "keys_edg": 7, "multiindex": 7, "knn": 7, "melt": 7, "adj": [7, 9, 10], "rownam": 7, "colnam": 7, "key_row": 7, "key_col": 7, "key_data": 7, "as_attr": 7, "pivot": 7, "zero": 7, "labels1": 7, "labels2": 7, "novel_nam": 7, "uncertain": 7, "dct_deg1": 7, "dct_deg2": 7, "df_map": 7, "record": 7, "25": 7, "ntop": 7, "key_group": 7, "key_gen": 7, "compar": 7, "adjust": 7, "lower": 7, "than": 7, "long": 7, "fold": 7, "higher": 7, "tl": 7, "rank_genes_group": 7, "intersect": 7, "inspect": 7, "applymap": 7, "lambda": 7, "len": 7, "df_deg1": 7, "df_deg2": 7, "key_pval": 7, "p_val_adj": 7, "tabl": 7, "seurat": 7, "findallmark": 7, "p_val": 7, "avg_logfc": 7, "pct": 7, "format": 7, "case": 7, "sensit": 7, "mod_labels1": 7, "mod_labels2": 7, "df_var_link": 7, "avg_scal": 7, "zscore_cut": 7, "enrich": 7, "off": 7, "score": 7, "genes1": 7, "genes2": 7, "gmap": 7, "conn": 7, "key_neigh": 7, "dist": 7, "nodenam": 7, "fdir": 7, "tfset": 7, "temp": 7, "export": 7, "csv": 7, "visual": 7, "dirnam": 7, "subdir_model": 7, "_model": 7, "ckpt": 7, "subdirectori": 7, "came_resdir": 7, "heterogrnr": 7, "obs_labels1": 7, "obs_labels2": 7, "avg_expr1": 7, "avg_expr2": 7, "tags_ob": 7, "tags_var": 7, "cut_ov": 7, "norm_mtd_ov": 7, "ov_norm_first": 7, "global_adjust_ov": 7, "global_adjust_vv": 7, "vargroup_filt": 7, "linkag": 7, "cel": 7, "threshold": 7, "global": 7, "key_id": 7, "attrdict": 7, "u": 7, "avg_scaled1": 7, "avg_scaled2": 7, "mod_genes1": 7, "mod_genes2": 7, "genes_common1": 7, "genes_common2": 7, "calcul": 7, "rel": 7, "find": 7, "those": 7, "specif": 7, "key_modul": 7, "key_split": 7, "key_nam": 7, "include_priv": 7, "fill": 7, "return_nod": 7, "keys_attr": 7, "node_lay": 7, "subset_kei": 7, "4": 7, "7": 7, "po": [7, 9], "draw": 7, "with_label": 7, "with_self": 7, "nodelist": 7, "edgedf": 7, "nodedf": 7, "n_neighbor": 7, "cosin": 7, "metric_kwd": 7, "use_rep": 7, "key_ad": 7, "func_dist2weight": 7, "sigma": 7, "sort": 7, "index_nam": 7, "link": 7, "upper": 7, "triangl": 7, "consid": 7, "quantifi": 7, "labels_or_prob": 7, "soft": 7, "assign": 7, "df_var_links_expr": 7, "sizes1": 7, "sizes2": 7, "norm_func": 7, "n1": 7, "n2": 7, "y_true": 7, "y_pred": 7, "classes_on": 7, "as_df": 7, "pred": 7, "order_row": 7, "order_col": 7, "normalize_axi": 7, "asspars": 7, "wrap": 7, "sklearn": 7, "contingency_matrix": 7, "feb": 7, "12": 7, "d": 7, "pref": 7, "dct": 7, "k": 7, "lst": 7, "item": 7, "extend": 7, "fname": 7, "encod": 7, "utf": 7, "nowtim": 7, "bracket": 7, "lst1": 7, "lst2": 7, "invers": 7, "skip_equ": 7, "combin": 7, "pairs_sm": 7, "pairs_m": 7, "to_pair": 7, "start": 7, "media": 7, "end": 7, "dct_se": 7, "iloc": 7, "pairs_s": 7, "amph_id": 7, "zebrafish_id": 7, "revers": 7, "test_json": 7, "json": 7, "obj": 7, "fpath": 7, "seq": [7, 9, 10], "group_label": 7, "n_out": 7, "seed": 7, "randomli": 7, "kept": 7, "subsampl": 7, "frac": 7, "n_min": 7, "fraction": 7, "less": 7, "smaller": 7, "fn": 7, "vis_hidden_lay": 7, "py": 7, "time": 7, "06": 7, "09": 7, "counts_per_cel": 7, "collect": 7, "total_count": 7, "replac": 7, "downsampl": 7, "more": 7, "basi": 7, "determin": 7, "depend": 7, "43": 7, "macro": 7, "oct": 7, "31": 7, "embed_kei": 7, "figsize_sav": 7, "titl": 7, "subplot": 7, "equal": 7, "tsne": 7, "figur": 7, "fig": 7, "ax": 7, "confsdf": 7, "label_shift": 7, "alluvi": 7, "75": 7, "cmap_nam": 7, "tab20_r": 7, "shuffle_color": 7, "fonsize_titl": 7, "figsiz": 7, "a_sort": 7, "b_sort": 7, "confus": 7, "side": 7, "name_fg": 7, "rdpu": 7, "low": 7, "rm_high": 7, "01": 7, "xy": 7, "do_zscor": 7, "ncol": 7, "axscal": 7, "name_xi": 7, "with_cbar": 7, "cmap": 7, "rdylbu_r": 7, "vmin": 7, "vmax": 7, "coordin": 7, "color": 7, "n_point": 7, "scatter": 7, "colormap": 7, "minimum": 7, "maximum": 7, "neighbor_kei": 7, "pt_size": 7, "angle_x": 7, "angle_i": 7, "150": 7, "cmap_pt": 7, "tab20": 7, "kwds_edg": 7, "red": 7, "fx": 7, "sharei": 7, "ylim": 7, "distribut": 7, "xlim": 7, "transpos": 7, "violin": 7, "df_hmap": 7, "xlabel": 7, "ylabel": 7, "magma_r": 7, "cbar": 7, "cbar_kw": 7, "shrink": 7, "xrotat": 7, "45": 7, "yrotat": 7, "wrapper": 7, "sn": 7, "df_data": 7, "lb": 7, "name_label": 7, "cmap_heat": 7, "cmap_lb": 7, "n_sampl": 7, "n_ref_class": 7, "rotat": 7, "tick": 7, "gridspec": 7, "vertic": 7, "spread_nod": 7, "center": 7, "straight": 7, "line": 7, "horizont": 7, "around": 7, "layout": 7, "dictionari": 7, "complete_multipartite_graph": 7, "algorithm": 7, "doe": 7, "try": 7, "minim": 7, "complet": 7, "multipartit": 7, "As": 7, "place": 7, "linewidth": 7, "linecolor": 7, "grei": 7, "conting": 7, "ytrue_list": 7, "ypred_list": 7, "nrow": 7, "combim": 7, "arrang": 7, "markers": 7, "yticklabel": 7, "noth": 7, "tt": 7, "legend_loc": 7, "curv": 7, "xy1": 7, "xy2": 7, "adj1": 7, "adj2": 7, "pt_color1": 7, "pt_color2": 7, "offset_scal": 7, "yscale": 7, "style_nam": 7, "rgb": 7, "numer": 7, "weight_kei": 7, "nodelb_kei": 7, "xscale": 7, "edge_scal": 7, "node_scal": 7, "node_size_min": 7, "node_size_max": 7, "1800": 7, "genemodul": 7, "record_nam": 7, "splitbi": 7, "left_group": 7, "tab20b": 7, "helper": 7, "composit": 7, "stage": 7, "condit": 7, "unit": 7, "legend": 7, "locat": 7, "act": 7, "hold": 7, "To": 7, "rescal": 7, "subtract": 7, "separ": 7, "Then": 7, "largest": 7, "magnitud": 7, "thu": 7, "aspect": 7, "ratio": [7, 10], "preserv": 7, "unchang": 7, "extent": 7, "rescale_layout_dict": 7, "angl": 7, "fontsize_cbar": 7, "9": 7, "fontsize_axlabel": 7, "fontsize_titl": 7, "lim_margin": 7, "continu": 7, "is_priv": 7, "sharex": 7, "adt": 7, "text_id": 7, "anno_df": 7, "text_col": 7, "index_col": 7, "anno_fonts": 7, "plkwd": 7, "text": 7, "fontsiz": 7, "arg": 7, "pl": 7, "set_label": 7, "regular": 7, "venn": 7, "iter": 7, "viridi": 7, "grid": 7, "set1": 7, "spectral": 7, "scanpi": 7, "palett": 7, "zeileis_26": 7, "default_64": 7, "df_score": 7, "col_label": 7, "col_pr": 7, "n_subsampl": 7, "handl": 7, "statist": 7, "trans_to": 7, "edge_df": 7, "__": 7, "backup_npz": 7, "name_mtx": 7, "dtype": 7, "float32": 7, "kw": 7, "npz": 7, "tsv": 7, "barcod": 7, "meta_cel": 7, "altern": 7, "mtx": 7, "read_10x_mtx": 7, "df0": 7, "only_diff": 7, "src_edge_tgt": 7, "groups1": 7, "groups2": 7, "asdf": 7, "verbos": 7, "n0": 7, "group_conn": 7, "unify_nam": 7, "vaiabl": 7, "match": 7, "var_nam": 7, "key_i": 7, "n_tot_each": 7, "1000": 7, "1234": 7, "id_prefix": 7, "reset_index_bi": 7, "reset": 7, "foo_chang": 7, "force_redo": 7, "inplac": 7, "test": 7, "return_info": 7, "assum": 7, "re": 7, "gcnt": 7, "gcnt1": 7, "gcnt2": 7, "els": 7, "df_match": 7, "val": 7, "col": 7, "uniquelist": 7, "with_nul": 7, "col_from": 7, "col_to": 7, "remov": 7, "duplic": 7, "homo": 7, "null": 7, "key_hvg": 7, "highly_vari": 7, "n_var": 7, "recomput": 7, "keep": 7, "min_mean": 7, "max_mean": 7, "min_disp": 7, "max_disp": 7, "adata_process": 7, "proport": 7, "average_mat": 7, "use_raw": 7, "turn": 7, "zeor": 7, "use_gen": 7, "collis": 7, "print_group": 7, "effici": 7, "count_on": 7, "group_bi": 7, "value_count": 7, "with_mean": 7, "max_valu": 7, "wile": 7, "boolean": 7, "shoud": 7, "dens": 7, "standard": 7, "deviat": 7, "absolut": 7, "key_new": 7, "cover": 7, "x_pca": 7, "obsm": 7, "old": 7, "as_dgl": 7, "sparse_out": 7, "header": 7, "icol": 7, "wai": 7, "bug": 7, "fix": 7, "someth": 7, "might": 7, "go": 7, "wrong": 7, "nodes1": 7, "nodes2": 7, "with_singleton": 7, "symmetr": [7, 10], "bi_adj": 7, "n2id": 7, "names1": 7, "names2": 7, "arrari": 7, "group_list": 7, "new_kei": 7, "renam": 7, "_": 7, "join": 7, "wheter": 7, "adata_new": 7, "f": 7, "obs_kei": 7, "dsname": 7, "key_dsnam": 7, "rang": 7, "n_dataset": 7, "adata_merg": 7, "c": 7, "mat_list": 7, "csr_matrix": 7, "gene_list": 7, "scanorama": 7, "merge_dataset": 7, "ret_gen": 7, "scale_factor": 7, "median": 7, "level": 7, "500": 7, "splitseq": 7, "confound": 7, "1e": 7, "normalize_colsum": 7, "normalize_rowsum": 7, "restrict": 7, "occur": 7, "normalize_data": 7, "10000": 7, "nneigh": 7, "reso": 7, "vi": 7, "overal": 7, "5000": 7, "quick": 7, "gname": 7, "pattern": 7, "group_nam": 7, "min_sampl": 7, "small": 7, "changabl": 7, "field": 7, "edge_dict": 7, "foo": 7, "longtensor": 7, "token": 7, "onlyx": 7, "onc": 7, "you": 7, "want": 7, "marker_df": 7, "flatten": 7, "df_info": 7, "col_group": 7, "col_nam": 7, "info": 7, "zero_cent": 7, "test_idx": 7, "train_label": 7, "test_label": 7, "cluster_label": 7, "lr": [7, 10], "001": 7, "l2norm": 7, "dir_main": 7, "basetrain": 7, "train_pr": 7, "test_pr": 7, "train_acc": 7, "test_acc": 7, "ami": 7, "print_info": 7, "class_weight": 7, "ufunc": 7, "sqrt": 7, "n_add": 7, "use_class_weight": 7, "005": 7, "cat_class": 7, "devic": [7, 10], "info_strid": 7, "backup_strid": 7, "222": 7, "unbalanc": 7, "toler": 7, "cpu": 7, "stride": 7, "0001": 7, "128": 7, "sampler": 7, "111": 7, "dataload": 7, "reorder": 7, "argmax_dim": 7, "is_train": 7, "scale_within": 7, "ground_truth": 7, "node_cls_typ": 7, "key_label": 7, "123": 7, "well": 7, "sim": [8, 9], "get_emb": [8, 9], "weights_init": [8, 9, 10], "inter_att": [8, 9], "intra_att": [8, 9], "encode_onehot": [8, 10], "load_acm": [8, 10], "load_amin": [8, 10], "load_dblp": [8, 10], "load_freebas": [8, 10], "load_mouse_human": [8, 10], "load_mouse_human_binari": [8, 10], "load_mouse_human_sagitt": [8, 10], "load_mouse_human_thre": [8, 10], "normalize_adj": [8, 10], "preprocess_featur": [8, 10], "sparse_mx_to_torch_sparse_tensor": [8, 10], "setup_logg": [8, 10], "acm_param": [8, 10], "aminer_param": [8, 10], "dblp_param": [8, 10], "freebase_param": [8, 10], "mouse_human_all_binary_param": [8, 10], "mouse_human_binary_param": [8, 10], "mouse_human_param": [8, 10], "mouse_human_sagittal_param": [8, 10], "set_param": [8, 10], "hidden_dim": 9, "tau": 9, "lam": 9, "z_mp": 9, "z_sc": 9, "z1": 9, "z2": 9, "feats_dim_list": 9, "sample_r": 9, "nei_num": 9, "mp": 9, "nei_index": 9, "emb": [9, 10], "in_ft": 9, "out_ft": 9, "nei_h": 9, "nei": 9, "h_refer": 9, "idx_train": 10, "idx_val": 10, "idx_test": 10, "nb_class": 10, "wd": 10, "istest": 10, "type_num": 10, "mouse_human": 10, "mouse_human_binari": 10, "mouse_human_sagitt": 10, "convert": 10, "sparse_mx": 10, "save_dir": 10, "if_train": 10, "ft_in": 10, "modul": [11, 12], "search": 11, "page": 11, "packag": 12, "subpackag": 12, "content": 12}, "objects": {"": [[0, 0, 0, "-", "BrainAlign"]], "BrainAlign": [[1, 0, 0, "-", "brain_analysis"], [3, 0, 0, "-", "came"], [8, 0, 0, "-", "code"]], "BrainAlign.brain_analysis": [[1, 0, 0, "-", "analysis"], [1, 0, 0, "-", "analysis_main"], [1, 0, 0, "-", "analysis_utils"], [2, 0, 0, "-", "configs"], [1, 0, 0, "-", "data_utils"], [1, 0, 0, "-", "metrics"], [1, 0, 0, "-", "pipeline"], [1, 0, 0, "-", "process"]], "BrainAlign.brain_analysis.analysis": [[1, 1, 1, "", "align_cross_species"], [1, 1, 1, "", "analysis_expression"], [1, 1, 1, "", "brain_region_classfier"], [1, 1, 1, "", "cross_evaluation_aligment"], [1, 1, 1, "", "cross_evaluation_aligment_cluster"], [1, 1, 1, "", "cross_evaluation_aligment_seperate"], [1, 1, 1, "", "cross_species_binary_clustering"], [1, 1, 1, "", "cross_species_genes_clustering"], [1, 1, 1, "", "genes_homo_random_corr"], [1, 1, 1, "", "genes_homo_random_distance"], [1, 1, 1, "", "get_center"], [1, 1, 1, "", "get_homologous_rate"], [1, 1, 1, "", "homo_corr"], [1, 1, 1, "", "homo_corr_umap"], [1, 1, 1, "", "identify_markergene"], [1, 1, 1, "", "load_came_embeddings"], [1, 1, 1, "", "load_heco_embeddings"], [1, 1, 1, "", "load_homo_genes"], [1, 1, 1, "", "load_srrsc_embeddings"], [1, 1, 1, "", "plot_homo_random"], [1, 1, 1, "", "random_corr"], [1, 1, 1, "", "random_corr_umap"], [1, 1, 1, "", "spatial_alignment"], [1, 1, 1, "", "spatial_alignment_mouse"], [1, 1, 1, "", "transform_embedding"], [1, 1, 1, "", "ttest_homo_random"], [1, 1, 1, "", "umap_genes_seperate"], [1, 1, 1, "", "umap_seperate"]], "BrainAlign.brain_analysis.analysis_main": [[1, 1, 1, "", "alignment_STs"], [1, 2, 1, "", "alignment_STs_analysis"], [1, 2, 1, "", "anatomical_STs_analysis"], [1, 1, 1, "", "anatomical_STs_analysis_fun"], [1, 1, 1, "", "gene_comparison"], [1, 2, 1, "", "local_region_analysis"]], "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis": [[1, 3, 1, "", "experiment_1_cross_species_clustering"], [1, 3, 1, "", "experiment_2_umap_evaluation"], [1, 3, 1, "", "experiment_3_homo_random"], [1, 3, 1, "", "experiment_4_cross_species_genes_analysis"], [1, 3, 1, "", "experiment_5_genes_homo_random"], [1, 3, 1, "", "experiment_6_brain_region_classfier"], [1, 3, 1, "", "experiment_7_align_cross_species"], [1, 3, 1, "", "experiment_8_cross_evaluation_aligment_cluster"], [1, 3, 1, "", "forward"], [1, 3, 1, "", "genes_homo_random_distance"], [1, 3, 1, "", "homo_corr"], [1, 3, 1, "", "init_data"], [1, 3, 1, "", "plot_homo_random"], [1, 3, 1, "", "random_corr"], [1, 3, 1, "", "ttest_homo_random"]], "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis": [[1, 3, 1, "", "experiment_1_palette_comparison"], [1, 3, 1, "", "experiment_2_spatial_alignment_specie1"], [1, 3, 1, "", "experiment_2_spatial_alignment_specie2"], [1, 3, 1, "", "forward"]], "BrainAlign.brain_analysis.analysis_main.local_region_analysis": [[1, 3, 1, "", "experiment_1_neocortex_analysis"], [1, 3, 1, "", "forward"]], "BrainAlign.brain_analysis.analysis_utils": [[1, 1, 1, "", "average_expression"], [1, 1, 1, "", "gene_module_abstract_graph"], [1, 1, 1, "", "get_common_special_gene_list"], [1, 1, 1, "", "get_expression_group"], [1, 1, 1, "", "get_homologous_gene_list"], [1, 1, 1, "", "get_homologous_mat"]], "BrainAlign.brain_analysis.configs": [[2, 0, 0, "-", "came_config_binary"], [2, 0, 0, "-", "heco_config"], [2, 0, 0, "-", "heco_config_all"], [2, 0, 0, "-", "heco_config_binary"], [2, 0, 0, "-", "heco_config_binary_2020sa"], [2, 0, 0, "-", "heco_config_three_2020sa"], [2, 0, 0, "-", "sr_rsc_config_binary"]], "BrainAlign.brain_analysis.data_utils": [[1, 1, 1, "", "corr2_coeff"], [1, 1, 1, "", "generate_correlation_map"], [1, 1, 1, "", "num_zero_rows"], [1, 1, 1, "", "plot_marker_selection_TSNE_embedding"], [1, 1, 1, "", "plot_marker_selection_umap"], [1, 1, 1, "", "plot_marker_selection_umap_embedding"], [1, 1, 1, "", "threshold_array"], [1, 1, 1, "", "threshold_array_nonzero"], [1, 1, 1, "", "threshold_quantile"], [1, 1, 1, "", "threshold_std"], [1, 1, 1, "", "threshold_top"], [1, 1, 1, "", "train_test_val_split"]], "BrainAlign.brain_analysis.pipeline": [[1, 1, 1, "", "load_embeddings_came"], [1, 1, 1, "", "load_gene_embedding"], [1, 1, 1, "", "load_sample_embedding_concat"]], "BrainAlign.brain_analysis.process": [[1, 1, 1, "", "get_heco_input"], [1, 1, 1, "", "get_neighbor"], [1, 1, 1, "", "get_positive_sample"], [1, 1, 1, "", "get_spatial_relation"], [1, 1, 1, "", "get_srrsc_input"], [1, 1, 1, "", "highly_variable_HVGs"], [1, 1, 1, "", "load_embedding"], [1, 1, 1, "", "load_gene_embedding"], [1, 1, 1, "", "load_sample_embedding"], [1, 1, 1, "", "load_sample_label"], [1, 1, 1, "", "normalize_before_pruning"], [1, 1, 1, "", "normalize_default"], [1, 1, 1, "", "select_deg"], [1, 1, 1, "", "test_interation"], [1, 1, 1, "", "test_normalize"], [1, 1, 1, "", "test_pruning"], [1, 1, 1, "", "transform_pca_embedding"], [1, 1, 1, "", "transform_pca_embedding_np"]], "BrainAlign.came": [[3, 0, 0, "-", "PARAMETERS"], [4, 0, 0, "-", "datapair"], [5, 0, 0, "-", "model"], [3, 0, 0, "-", "pipeline"], [7, 0, 0, "-", "utils"]], "BrainAlign.came.PARAMETERS": [[3, 1, 1, "", "get_loss_params"], [3, 1, 1, "", "get_model_params"]], "BrainAlign.came.datapair": [[4, 0, 0, "-", "aligned"], [4, 0, 0, "-", "unaligned"]], "BrainAlign.came.datapair.aligned": [[4, 2, 1, "", "AlignedDataPair"], [4, 1, 1, "", "aligned_datapair_from_adatas"]], "BrainAlign.came.datapair.aligned.AlignedDataPair": [[4, 4, 1, "", "G"], [4, 4, 1, "", "classes"], [4, 5, 1, "", "etypes"], [4, 3, 1, "", "get_feature_dict"], [4, 3, 1, "", "get_obs_anno"], [4, 3, 1, "", "get_obs_dataset"], [4, 3, 1, "", "get_obs_features"], [4, 3, 1, "", "get_obs_ids"], [4, 3, 1, "", "get_obs_labels"], [4, 3, 1, "", "get_whole_net"], [4, 4, 1, "", "labels"], [4, 3, 1, "", "load"], [4, 3, 1, "", "make_ov_adj"], [4, 3, 1, "", "make_whole_net"], [4, 4, 1, "", "n_feats"], [4, 4, 1, "", "n_obs"], [4, 4, 1, "", "n_obs1"], [4, 4, 1, "", "n_obs2"], [4, 4, 1, "", "n_vnodes"], [4, 5, 1, "", "ntypes"], [4, 4, 1, "", "obs_ids"], [4, 4, 1, "", "obs_ids1"], [4, 4, 1, "", "obs_ids2"], [4, 4, 1, "", "oo_adj"], [4, 4, 1, "", "ov_adj"], [4, 3, 1, "", "save_init"], [4, 3, 1, "", "set_common_obs_annos"], [4, 3, 1, "", "set_dataset_names"], [4, 3, 1, "", "set_etypes"], [4, 3, 1, "", "set_features"], [4, 3, 1, "", "set_ntypes"], [4, 3, 1, "", "set_obs_dfs"], [4, 3, 1, "", "set_oo_adj"], [4, 3, 1, "", "set_ov_adj"], [4, 3, 1, "", "set_varnames_node"], [4, 3, 1, "", "summary_graph"], [4, 4, 1, "", "varnames_feat"], [4, 4, 1, "", "varnames_node"], [4, 4, 1, "", "vnode_ids"]], "BrainAlign.came.datapair.unaligned": [[4, 2, 1, "", "DataPair"], [4, 1, 1, "", "datapair_from_adatas"], [4, 1, 1, "", "make_features"]], "BrainAlign.came.datapair.unaligned.DataPair": [[4, 4, 1, "", "G"], [4, 4, 1, "", "classes"], [4, 5, 1, "", "etypes"], [4, 4, 1, "", "feat_names1"], [4, 4, 1, "", "feat_names2"], [4, 3, 1, "", "get_feature_dict"], [4, 3, 1, "", "get_obs_anno"], [4, 3, 1, "", "get_obs_dataset"], [4, 3, 1, "", "get_obs_features"], [4, 3, 1, "", "get_obs_ids"], [4, 3, 1, "", "get_obs_labels"], [4, 3, 1, "", "get_vnode_ids"], [4, 3, 1, "", "get_vnode_ids_by_name"], [4, 3, 1, "", "get_vnode_names"], [4, 3, 1, "", "get_whole_net"], [4, 4, 1, "", "labels"], [4, 3, 1, "", "load"], [4, 3, 1, "", "make_ov_adj"], [4, 3, 1, "", "make_whole_net"], [4, 4, 1, "", "n_feats"], [4, 4, 1, "", "n_obs"], [4, 4, 1, "", "n_obs1"], [4, 4, 1, "", "n_obs2"], [4, 4, 1, "", "n_vnodes"], [4, 4, 1, "", "n_vnodes1"], [4, 4, 1, "", "n_vnodes2"], [4, 5, 1, "", "ntypes"], [4, 4, 1, "", "obs_ids"], [4, 4, 1, "", "obs_ids1"], [4, 4, 1, "", "obs_ids2"], [4, 4, 1, "", "oo_adj"], [4, 4, 1, "", "ov_adj"], [4, 3, 1, "", "save_init"], [4, 3, 1, "", "set_common_obs_annos"], [4, 3, 1, "", "set_dataset_names"], [4, 3, 1, "", "set_etypes"], [4, 3, 1, "", "set_features"], [4, 3, 1, "", "set_ntypes"], [4, 3, 1, "", "set_obs_dfs"], [4, 3, 1, "", "set_oo_adj"], [4, 3, 1, "", "set_ov_adj"], [4, 3, 1, "", "set_var_dfs"], [4, 3, 1, "", "set_vnode_annos"], [4, 3, 1, "", "set_vv_adj"], [4, 3, 1, "", "summary_graph"], [4, 4, 1, "", "var_ids1"], [4, 4, 1, "", "var_ids2"], [4, 4, 1, "", "vnode_names1"], [4, 4, 1, "", "vnode_names2"], [4, 4, 1, "", "vv_adj"]], "BrainAlign.came.model": [[5, 0, 0, "-", "base_layers"], [5, 0, 0, "-", "cgc"], [5, 0, 0, "-", "cggc"], [5, 0, 0, "-", "heteroframe"], [5, 0, 0, "-", "hidden"], [5, 0, 0, "-", "loss"]], "BrainAlign.came.model.base_layers": [[5, 2, 1, "", "BaseMixConvLayer"], [5, 2, 1, "", "GeneralRGCLayer"], [5, 2, 1, "", "GraphAttentionLayer"], [5, 2, 1, "", "GraphConvLayer"], [5, 2, 1, "", "HeteroLayerNorm"], [5, 2, 1, "", "RelGraphConvLayer"]], "BrainAlign.came.model.base_layers.BaseMixConvLayer": [[5, 3, 1, "", "apply_out"], [5, 3, 1, "", "build_biases"], [5, 3, 1, "", "build_layernorm"], [5, 3, 1, "", "build_mix_conv"], [5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.base_layers.GeneralRGCLayer": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.base_layers.GraphAttentionLayer": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "reset_parameters"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.base_layers.GraphConvLayer": [[5, 5, 1, "", "bias"], [5, 3, 1, "", "extra_repr"], [5, 3, 1, "", "forward"], [5, 3, 1, "", "reset_parameters"], [5, 5, 1, "", "training"], [5, 5, 1, "", "weight"]], "BrainAlign.came.model.base_layers.HeteroLayerNorm": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.base_layers.RelGraphConvLayer": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.cgc": [[5, 2, 1, "", "CGCNet"], [5, 1, 1, "", "detach2numpy"]], "BrainAlign.came.model.cgc.CGCNet": [[5, 5, 1, "", "training"]], "BrainAlign.came.model.cggc": [[5, 2, 1, "", "CGGCNet"], [5, 1, 1, "", "detach2numpy"]], "BrainAlign.came.model.cggc.CGGCNet": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "get_attentions"], [5, 3, 1, "", "get_classification_loss"], [5, 3, 1, "", "get_hidden_states"], [5, 3, 1, "", "get_out_logits"], [5, 3, 1, "", "get_sampler"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.heteroframe": [[5, 2, 1, "", "HeteroGraphConv"]], "BrainAlign.came.model.heteroframe.HeteroGraphConv": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "mods"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.hidden": [[5, 2, 1, "", "HiddenRGCN"], [5, 2, 1, "", "HiddenRRGCN"]], "BrainAlign.came.model.hidden.HiddenRGCN": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.hidden.HiddenRRGCN": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.loss": [[5, 2, 1, "", "LabelSmoothingCrossEntropy"], [5, 1, 1, "", "ce_loss_with_rdrop"], [5, 1, 1, "", "classification_loss"], [5, 1, 1, "", "compute_kl_loss"], [5, 1, 1, "", "cross_entropy_loss"], [5, 1, 1, "", "multilabel_binary_cross_entropy"]], "BrainAlign.came.model.loss.LabelSmoothingCrossEntropy": [[5, 3, 1, "", "forward"], [5, 5, 1, "", "training"]], "BrainAlign.came.model.v0": [[6, 0, 0, "-", "cgc"], [6, 0, 0, "-", "cggc"], [6, 0, 0, "-", "heteroframe"], [6, 0, 0, "-", "hidden"], [6, 0, 0, "-", "loss"]], "BrainAlign.came.model.v0.cgc": [[6, 2, 1, "", "CGCNet"], [6, 1, 1, "", "detach2numpy"]], "BrainAlign.came.model.v0.cgc.CGCNet": [[6, 5, 1, "", "training"]], "BrainAlign.came.model.v0.cggc": [[6, 2, 1, "", "CGGCNet"], [6, 1, 1, "", "detach2numpy"]], "BrainAlign.came.model.v0.cggc.CGGCNet": [[6, 3, 1, "", "forward"], [6, 3, 1, "", "get_attentions"], [6, 3, 1, "", "get_classification_loss"], [6, 3, 1, "", "get_hidden_states"], [6, 3, 1, "", "get_out_logits"], [6, 5, 1, "", "training"]], "BrainAlign.came.model.v0.heteroframe": [[6, 2, 1, "", "HeteroGraphConv"]], "BrainAlign.came.model.v0.heteroframe.HeteroGraphConv": [[6, 3, 1, "", "forward"], [6, 5, 1, "", "mods"], [6, 5, 1, "", "training"]], "BrainAlign.came.model.v0.hidden": [[6, 2, 1, "", "HiddenRGCN"], [6, 2, 1, "", "HiddenRRGCN"]], "BrainAlign.came.model.v0.hidden.HiddenRGCN": [[6, 3, 1, "", "forward"], [6, 5, 1, "", "training"]], "BrainAlign.came.model.v0.hidden.HiddenRRGCN": [[6, 3, 1, "", "forward"], [6, 5, 1, "", "training"]], "BrainAlign.came.model.v0.loss": [[6, 2, 1, "", "LabelSmoothingCrossEntropy"], [6, 1, 1, "", "ce_loss_with_rdrop"], [6, 1, 1, "", "classification_loss"], [6, 1, 1, "", "compute_kl_loss"], [6, 1, 1, "", "cross_entropy_loss"], [6, 1, 1, "", "multilabel_binary_cross_entropy"]], "BrainAlign.came.model.v0.loss.LabelSmoothingCrossEntropy": [[6, 3, 1, "", "forward"], [6, 5, 1, "", "training"]], "BrainAlign.came.pipeline": [[3, 1, 1, "", "gather_came_results"], [3, 1, 1, "", "main_for_aligned"], [3, 1, 1, "", "main_for_unaligned"], [3, 1, 1, "", "plot_class_results"], [3, 1, 1, "", "preprocess_aligned"], [3, 1, 1, "", "preprocess_unaligned"]], "BrainAlign.came.utils": [[7, 0, 0, "-", "analyze"], [7, 0, 0, "-", "base"], [7, 0, 0, "-", "downsample_counts"], [7, 0, 0, "-", "evaluation"], [7, 0, 0, "-", "plot"], [7, 0, 0, "-", "preprocess"], [7, 0, 0, "-", "train"]], "BrainAlign.came.utils.analyze": [[7, 1, 1, "", "abstract_nodes"], [7, 1, 1, "", "abstract_ov_edges"], [7, 1, 1, "", "abstract_vv_edges"], [7, 1, 1, "", "adata_subgroup_edges"], [7, 1, 1, "", "adj_to_edges"], [7, 1, 1, "", "aggregate_links"], [7, 1, 1, "", "arrange_contingency_mat"], [7, 1, 1, "", "compare_deg_dicts"], [7, 1, 1, "", "compare_degs_adata"], [7, 1, 1, "", "compare_degs_seurat"], [7, 1, 1, "", "compare_modules"], [7, 1, 1, "", "compute_common_private"], [7, 1, 1, "", "edges_from_adata"], [7, 1, 1, "", "export_neighbor_subgraph_df"], [7, 1, 1, "", "export_subgraph_df"], [7, 1, 1, "", "get_adata_neighbors"], [7, 1, 1, "", "load_dpair_and_model"], [7, 1, 1, "", "make_abstracted_graph"], [7, 1, 1, "", "make_nx_input_from_df"], [7, 1, 1, "", "module_enrichment_for_classes"], [7, 1, 1, "", "module_homo_weights"], [7, 1, 1, "", "neighbor_induced_edgedf"], [7, 1, 1, "", "neighbor_induced_subgraph"], [7, 1, 1, "", "nx_from_adata"], [7, 1, 1, "", "nx_multipartite_graph"], [7, 1, 1, "", "nx_neighbors"], [7, 1, 1, "", "nx_to_dfs"], [7, 1, 1, "", "nx_to_nodedf"], [7, 1, 1, "", "set_precomputed_neighbors"], [7, 1, 1, "", "weight_linked_vars"], [7, 1, 1, "", "weight_linked_vars_by_expr"], [7, 1, 1, "", "weight_normalize_by_size"], [7, 1, 1, "", "wrapper_confus_mat"], [7, 1, 1, "", "wrapper_contingency_mat"]], "BrainAlign.came.utils.base": [[7, 1, 1, "", "check_dirs"], [7, 1, 1, "", "dec_timewrapper"], [7, 1, 1, "", "dict_struct"], [7, 1, 1, "", "dict_to_pairs"], [7, 1, 1, "", "load_json_dict"], [7, 1, 1, "", "load_pickle"], [7, 1, 1, "", "make_nowtime_tag"], [7, 1, 1, "", "make_pairs_from_lists"], [7, 1, 1, "", "map_by_sme"], [7, 1, 1, "", "pairs_to_dict"], [7, 1, 1, "", "save_json_dict"], [7, 1, 1, "", "save_pickle"], [7, 1, 1, "", "split_df"], [7, 1, 1, "", "strline"], [7, 1, 1, "", "subsample_each_group"], [7, 1, 1, "", "subsample_single"], [7, 1, 1, "", "write_info"]], "BrainAlign.came.utils.downsample_counts": [[7, 1, 1, "", "downsample_counts"], [7, 1, 1, "", "downsample_counts_per_cell"], [7, 1, 1, "", "downsample_total_counts"]], "BrainAlign.came.utils.evaluation": [[7, 1, 1, "", "accuracy"], [7, 1, 1, "", "get_AMI"], [7, 1, 1, "", "get_F1_score"]], "BrainAlign.came.utils.plot": [[7, 1, 1, "", "adata_embed_with_values"], [7, 1, 1, "", "alluvial_plot"], [7, 1, 1, "", "diy_cmap_grey_bg"], [7, 1, 1, "", "embed_with_values"], [7, 1, 1, "", "embedding_mock3d"], [7, 1, 1, "", "get_colors"], [7, 1, 1, "", "grid_bars_display_probas"], [7, 1, 1, "", "grid_bars_display_probas_transposed"], [7, 1, 1, "", "grid_display_probas"], [7, 1, 1, "", "heatmap"], [7, 1, 1, "", "heatmap_probas"], [7, 1, 1, "", "multipartite_layout"], [7, 1, 1, "", "plot_confus_mat"], [7, 1, 1, "", "plot_confus_multi_mats"], [7, 1, 1, "", "plot_contingency_mat"], [7, 1, 1, "", "plot_distance_lines"], [7, 1, 1, "", "plot_edges_by_adj"], [7, 1, 1, "", "plot_line_list"], [7, 1, 1, "", "plot_mapped_graph"], [7, 1, 1, "", "plot_multipartite_graph"], [7, 1, 1, "", "plot_records_for_trainer"], [7, 1, 1, "", "plot_splitted_umaps"], [7, 1, 1, "", "plot_stacked_bar"], [7, 1, 1, "", "rescale_layout"], [7, 1, 1, "", "rotate_xticklabels"], [7, 1, 1, "", "rotate_yticklabels"], [7, 1, 1, "", "sorted_scatter"], [7, 1, 1, "", "triple_umaps"], [7, 1, 1, "", "umap_grid"], [7, 1, 1, "", "umap_with_annotates"], [7, 1, 1, "", "venn_plot"], [7, 1, 1, "", "view_color_map"], [7, 1, 1, "", "wrapper_heatmap_scores"]], "BrainAlign.came.utils.preprocess": [[7, 2, 1, "", "AdjacentTrans"], [7, 1, 1, "", "adata_from_raw"], [7, 1, 1, "", "add_columns"], [7, 1, 1, "", "add_new_edgetype_to_dglgraph"], [7, 1, 1, "", "add_obs_annos"], [7, 1, 1, "", "add_var_annos"], [7, 1, 1, "", "agg_group_edges"], [7, 1, 1, "", "align_adata_vars"], [7, 1, 1, "", "all_vars_of_adata"], [7, 1, 1, "", "augment_repeat_adata"], [7, 1, 1, "", "bisplit_adata"], [7, 1, 1, "", "change_names"], [7, 1, 1, "", "compute_and_get_DEGs"], [7, 1, 1, "", "compute_unkn_rate"], [7, 1, 1, "", "compute_unkn_rate_for2"], [7, 1, 1, "", "describe_mat"], [7, 1, 1, "", "describe_mat_nnz"], [7, 1, 1, "", "dict_has_keys"], [7, 1, 1, "", "filter_mitogenes"], [7, 1, 1, "", "get_homologies"], [7, 1, 1, "", "get_homologues"], [7, 1, 1, "", "get_hvgs"], [7, 1, 1, "", "get_marker_info_table"], [7, 1, 1, "", "get_marker_name_table"], [7, 1, 1, "", "get_scnet"], [7, 1, 1, "", "group_mean"], [7, 1, 1, "", "group_mean_adata"], [7, 1, 1, "", "group_mean_dense"], [7, 1, 1, "", "group_mean_multiadata"], [7, 1, 1, "", "group_mean_sparse"], [7, 1, 1, "", "group_median_dense"], [7, 1, 1, "", "group_value_counts"], [7, 1, 1, "", "group_zscore"], [7, 1, 1, "", "group_zscore_adata"], [7, 1, 1, "", "homograph_from_scipy"], [7, 1, 1, "", "is1v1pairs"], [7, 1, 1, "", "is_symetric"], [7, 1, 1, "", "label_binarize_each"], [7, 1, 1, "", "load_dense"], [7, 1, 1, "", "load_namelist"], [7, 1, 1, "", "load_sparse"], [7, 1, 1, "", "make_adata"], [7, 1, 1, "", "make_bipartite_adj"], [7, 1, 1, "", "make_dict_from_str"], [7, 1, 1, "", "make_id_name_maps"], [7, 1, 1, "", "mean_of_nozeros"], [7, 1, 1, "", "merge_adata_groups"], [7, 1, 1, "", "merge_adatas"], [7, 1, 1, "", "merge_group_labels"], [7, 1, 1, "", "merge_metas"], [7, 1, 1, "", "merge_named_matrices"], [7, 1, 1, "", "mtx2df"], [7, 1, 1, "", "normalize_col"], [7, 1, 1, "", "normalize_default"], [7, 1, 1, "", "normalize_log_then_total"], [7, 1, 1, "", "normalize_max"], [7, 1, 1, "", "normalize_maxmin"], [7, 1, 1, "", "normalize_norms"], [7, 1, 1, "", "normalize_row"], [7, 1, 1, "", "order_contingency_mat"], [7, 1, 1, "", "pivot_df_to_sparse"], [7, 1, 1, "", "pivot_to_sparse"], [7, 1, 1, "", "quick_pre_clust"], [7, 1, 1, "", "quick_pre_vis"], [7, 1, 1, "", "quick_preprocess"], [7, 1, 1, "", "reduce_to_align"], [7, 1, 1, "", "regu_gname"], [7, 1, 1, "", "remove_adata_groups"], [7, 1, 1, "", "remove_adata_small_groups"], [7, 1, 1, "", "remove_small_groups"], [7, 1, 1, "", "reverse_dict"], [7, 1, 1, "", "reverse_dict_of_list"], [7, 1, 1, "", "save_mtx2df"], [7, 1, 1, "", "save_named_mtx"], [7, 1, 1, "", "save_namelist"], [7, 1, 1, "", "scipy_edge_dict_for_dgl"], [7, 1, 1, "", "split_adata"], [7, 1, 1, "", "subset_matches"], [7, 1, 1, "", "take_1v1_matches"], [7, 1, 1, "", "take_adata_groups"], [7, 1, 1, "", "take_freq1"], [7, 1, 1, "", "take_freq1more"], [7, 1, 1, "", "take_group_labels"], [7, 1, 1, "", "top_markers_from_adata"], [7, 1, 1, "", "top_markers_from_df"], [7, 1, 1, "", "top_markers_from_info"], [7, 1, 1, "", "unpack_dict_of_lists"], [7, 1, 1, "", "wrapper_normalize"], [7, 1, 1, "", "wrapper_scale"], [7, 1, 1, "", "zscore"]], "BrainAlign.came.utils.preprocess.AdjacentTrans": [[7, 3, 1, "", "T"], [7, 3, 1, "", "from_edge_df"], [7, 3, 1, "", "reduce_to_align"], [7, 3, 1, "", "reduce_to_align_features"], [7, 4, 1, "", "shape"]], "BrainAlign.came.utils.train": [[7, 2, 1, "", "Trainer"], [7, 1, 1, "", "infer_for_nodes"], [7, 1, 1, "", "make_class_weights"], [7, 1, 1, "", "order_by_ids"], [7, 1, 1, "", "prepare4train"], [7, 1, 1, "", "seed_everything"]], "BrainAlign.came.utils.train.Trainer": [[7, 3, 1, "", "evaluate_metrics"], [7, 3, 1, "", "get_current_outputs"], [7, 3, 1, "", "log_info"], [7, 3, 1, "", "plot_class_accs"], [7, 3, 1, "", "plot_class_losses"], [7, 3, 1, "", "plot_cluster_index"], [7, 3, 1, "", "set_class_weights"], [7, 3, 1, "", "train"], [7, 3, 1, "", "train_minibatch"]], "BrainAlign.code": [[8, 0, 0, "-", "main_heco"], [9, 0, 0, "-", "module"], [10, 0, 0, "-", "utils"]], "BrainAlign.code.main_heco": [[8, 1, 1, "", "run_heco"], [8, 1, 1, "", "train"]], "BrainAlign.code.module": [[9, 0, 0, "-", "contrast"], [9, 0, 0, "-", "heco"], [9, 0, 0, "-", "mp_encoder"], [9, 0, 0, "-", "sc_encoder"]], "BrainAlign.code.module.contrast": [[9, 2, 1, "", "Contrast"]], "BrainAlign.code.module.contrast.Contrast": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "sim"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.heco": [[9, 2, 1, "", "HeCo"]], "BrainAlign.code.module.heco.HeCo": [[9, 3, 1, "", "forward"], [9, 3, 1, "", "get_embeds"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.mp_encoder": [[9, 2, 1, "", "Attention"], [9, 2, 1, "", "GCN"], [9, 2, 1, "", "Mp_encoder"]], "BrainAlign.code.module.mp_encoder.Attention": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.mp_encoder.GCN": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"], [9, 3, 1, "", "weights_init"]], "BrainAlign.code.module.mp_encoder.Mp_encoder": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.sc_encoder": [[9, 2, 1, "", "Sc_encoder"], [9, 2, 1, "", "inter_att"], [9, 2, 1, "", "intra_att"]], "BrainAlign.code.module.sc_encoder.Sc_encoder": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.sc_encoder.inter_att": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"]], "BrainAlign.code.module.sc_encoder.intra_att": [[9, 3, 1, "", "forward"], [9, 5, 1, "", "training"]], "BrainAlign.code.utils": [[10, 0, 0, "-", "evaluate"], [10, 0, 0, "-", "load_data"], [10, 0, 0, "-", "logger"], [10, 0, 0, "-", "logreg"], [10, 0, 0, "-", "params"]], "BrainAlign.code.utils.evaluate": [[10, 1, 1, "", "evaluate"]], "BrainAlign.code.utils.load_data": [[10, 1, 1, "", "encode_onehot"], [10, 1, 1, "", "load_acm"], [10, 1, 1, "", "load_aminer"], [10, 1, 1, "", "load_data"], [10, 1, 1, "", "load_dblp"], [10, 1, 1, "", "load_freebase"], [10, 1, 1, "", "load_mouse_human"], [10, 1, 1, "", "load_mouse_human_binary"], [10, 1, 1, "", "load_mouse_human_sagittal"], [10, 1, 1, "", "load_mouse_human_three"], [10, 1, 1, "", "normalize_adj"], [10, 1, 1, "", "preprocess_features"], [10, 1, 1, "", "sparse_mx_to_torch_sparse_tensor"]], "BrainAlign.code.utils.logger": [[10, 1, 1, "", "setup_logger"]], "BrainAlign.code.utils.logreg": [[10, 2, 1, "", "LogReg"]], "BrainAlign.code.utils.logreg.LogReg": [[10, 3, 1, "", "forward"], [10, 5, 1, "", "training"], [10, 3, 1, "", "weights_init"]], "BrainAlign.code.utils.params": [[10, 1, 1, "", "acm_params"], [10, 1, 1, "", "aminer_params"], [10, 1, 1, "", "dblp_params"], [10, 1, 1, "", "freebase_params"], [10, 1, 1, "", "mouse_human_all_binary_params"], [10, 1, 1, "", "mouse_human_binary_params"], [10, 1, 1, "", "mouse_human_params"], [10, 1, 1, "", "mouse_human_sagittal_params"], [10, 1, 1, "", "set_params"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"brainalign": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "subpackag": [0, 1, 3, 5, 8], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "brain_analysi": [1, 2], "submodul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "analysi": 1, "analysis_main": 1, "analysis_util": 1, "data_util": 1, "metric": 1, "pipelin": [1, 3], "process": 1, "config": 2, "came_config_binari": 2, "heco_config": 2, "heco_config_al": 2, "heco_config_binari": 2, "heco_config_binary_2020sa": 2, "heco_config_three_2020sa": 2, "sr_rsc_config_binari": 2, "came": [3, 4, 5, 6, 7], "paramet": 3, "datapair": 4, "align": 4, "unalign": 4, "model": [5, 6], "base_lay": [5, 6], "cgc": [5, 6], "cggc": [5, 6], "heterofram": [5, 6], "hidden": [5, 6], "loss": [5, 6], "v0": 6, "util": [7, 10], "analyz": 7, "base": 7, "downsample_count": 7, "evalu": [7, 10], "plot": 7, "preprocess": 7, "train": 7, "train_v0": 7, "code": [8, 9, 10], "main": 8, "main_heco": 8, "main_parallel": 8, "predict": 8, "contrast": 9, "heco": 9, "mp_encod": 9, "sc_encod": 9, "load_data": 10, "logger": 10, "logreg": 10, "param": 10, "welcom": 11, "": 11, "document": 11, "indic": 11, "tabl": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"BrainAlign package": [[0, "brainalign-package"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [3, "subpackages"], [5, "subpackages"], [8, "subpackages"]], "Module contents": [[0, "module-BrainAlign"], [1, "module-BrainAlign.brain_analysis"], [2, "module-BrainAlign.brain_analysis.configs"], [3, "module-BrainAlign.came"], [4, "module-BrainAlign.came.datapair"], [5, "module-BrainAlign.came.model"], [6, "module-contents"], [7, "module-BrainAlign.came.utils"], [8, "module-BrainAlign.code"], [9, "module-BrainAlign.code.module"], [10, "module-BrainAlign.code.utils"]], "BrainAlign.brain_analysis package": [[1, "brainalign-brain-analysis-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "BrainAlign.brain_analysis.analysis module": [[1, "module-BrainAlign.brain_analysis.analysis"]], "BrainAlign.brain_analysis.analysis_main module": [[1, "module-BrainAlign.brain_analysis.analysis_main"]], "BrainAlign.brain_analysis.analysis_utils module": [[1, "module-BrainAlign.brain_analysis.analysis_utils"]], "BrainAlign.brain_analysis.data_utils module": [[1, "module-BrainAlign.brain_analysis.data_utils"]], "BrainAlign.brain_analysis.metrics module": [[1, "module-BrainAlign.brain_analysis.metrics"]], "BrainAlign.brain_analysis.pipeline module": [[1, "module-BrainAlign.brain_analysis.pipeline"]], "BrainAlign.brain_analysis.process module": [[1, "module-BrainAlign.brain_analysis.process"]], "BrainAlign.brain_analysis.configs package": [[2, "brainalign-brain-analysis-configs-package"]], "BrainAlign.brain_analysis.configs.came_config_binary module": [[2, "module-BrainAlign.brain_analysis.configs.came_config_binary"]], "BrainAlign.brain_analysis.configs.heco_config module": [[2, "module-BrainAlign.brain_analysis.configs.heco_config"]], "BrainAlign.brain_analysis.configs.heco_config_all module": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_all"]], "BrainAlign.brain_analysis.configs.heco_config_binary module": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_binary"]], "BrainAlign.brain_analysis.configs.heco_config_binary_2020sa module": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_binary_2020sa"]], "BrainAlign.brain_analysis.configs.heco_config_three_2020sa module": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_three_2020sa"]], "BrainAlign.brain_analysis.configs.sr_rsc_config_binary module": [[2, "module-BrainAlign.brain_analysis.configs.sr_rsc_config_binary"]], "BrainAlign.came package": [[3, "brainalign-came-package"]], "BrainAlign.came.PARAMETERS module": [[3, "module-BrainAlign.came.PARAMETERS"]], "BrainAlign.came.pipeline module": [[3, "module-BrainAlign.came.pipeline"]], "BrainAlign.came.datapair package": [[4, "brainalign-came-datapair-package"]], "BrainAlign.came.datapair.aligned module": [[4, "module-BrainAlign.came.datapair.aligned"]], "BrainAlign.came.datapair.unaligned module": [[4, "module-BrainAlign.came.datapair.unaligned"]], "BrainAlign.came.model package": [[5, "brainalign-came-model-package"]], "BrainAlign.came.model.base_layers module": [[5, "module-BrainAlign.came.model.base_layers"]], "BrainAlign.came.model.cgc module": [[5, "module-BrainAlign.came.model.cgc"]], "BrainAlign.came.model.cggc module": [[5, "module-BrainAlign.came.model.cggc"]], "BrainAlign.came.model.heteroframe module": [[5, "module-BrainAlign.came.model.heteroframe"]], "BrainAlign.came.model.hidden module": [[5, "module-BrainAlign.came.model.hidden"]], "BrainAlign.came.model.loss module": [[5, "module-BrainAlign.came.model.loss"]], "BrainAlign.came.model.v0 package": [[6, "brainalign-came-model-v0-package"]], "BrainAlign.came.model.v0.base_layers module": [[6, "brainalign-came-model-v0-base-layers-module"]], "BrainAlign.came.model.v0.cgc module": [[6, "module-BrainAlign.came.model.v0.cgc"]], "BrainAlign.came.model.v0.cggc module": [[6, "module-BrainAlign.came.model.v0.cggc"]], "BrainAlign.came.model.v0.heteroframe module": [[6, "module-BrainAlign.came.model.v0.heteroframe"]], "BrainAlign.came.model.v0.hidden module": [[6, "module-BrainAlign.came.model.v0.hidden"]], "BrainAlign.came.model.v0.loss module": [[6, "module-BrainAlign.came.model.v0.loss"]], "BrainAlign.came.utils package": [[7, "brainalign-came-utils-package"]], "BrainAlign.came.utils.analyze module": [[7, "module-BrainAlign.came.utils.analyze"]], "BrainAlign.came.utils.base module": [[7, "module-BrainAlign.came.utils.base"]], "BrainAlign.came.utils.downsample_counts module": [[7, "module-BrainAlign.came.utils.downsample_counts"]], "BrainAlign.came.utils.evaluation module": [[7, "module-BrainAlign.came.utils.evaluation"]], "BrainAlign.came.utils.plot module": [[7, "module-BrainAlign.came.utils.plot"]], "BrainAlign.came.utils.preprocess module": [[7, "module-BrainAlign.came.utils.preprocess"]], "BrainAlign.came.utils.train module": [[7, "module-BrainAlign.came.utils.train"]], "BrainAlign.came.utils.train_v0 module": [[7, "brainalign-came-utils-train-v0-module"]], "BrainAlign.code package": [[8, "brainalign-code-package"]], "BrainAlign.code.main module": [[8, "brainalign-code-main-module"]], "BrainAlign.code.main_heco module": [[8, "module-BrainAlign.code.main_heco"]], "BrainAlign.code.main_parallel module": [[8, "brainalign-code-main-parallel-module"]], "BrainAlign.code.predict module": [[8, "brainalign-code-predict-module"]], "BrainAlign.code.module package": [[9, "brainalign-code-module-package"]], "BrainAlign.code.module.contrast module": [[9, "module-BrainAlign.code.module.contrast"]], "BrainAlign.code.module.heco module": [[9, "module-BrainAlign.code.module.heco"]], "BrainAlign.code.module.mp_encoder module": [[9, "module-BrainAlign.code.module.mp_encoder"]], "BrainAlign.code.module.sc_encoder module": [[9, "module-BrainAlign.code.module.sc_encoder"]], "BrainAlign.code.utils package": [[10, "brainalign-code-utils-package"]], "BrainAlign.code.utils.evaluate module": [[10, "module-BrainAlign.code.utils.evaluate"]], "BrainAlign.code.utils.load_data module": [[10, "module-BrainAlign.code.utils.load_data"]], "BrainAlign.code.utils.logger module": [[10, "module-BrainAlign.code.utils.logger"]], "BrainAlign.code.utils.logreg module": [[10, "module-BrainAlign.code.utils.logreg"]], "BrainAlign.code.utils.params module": [[10, "module-BrainAlign.code.utils.params"]], "Welcome to BrainAlign\u2019s documentation!": [[11, "welcome-to-brainalign-s-documentation"]], "Indices and tables": [[11, "indices-and-tables"]], "BrainAlign": [[12, "brainalign"]]}, "indexentries": {"brainalign": [[0, "module-BrainAlign"]], "module": [[0, "module-BrainAlign"], [1, "module-BrainAlign.brain_analysis"], [1, "module-BrainAlign.brain_analysis.analysis"], [1, "module-BrainAlign.brain_analysis.analysis_main"], [1, "module-BrainAlign.brain_analysis.analysis_utils"], [1, "module-BrainAlign.brain_analysis.data_utils"], [1, "module-BrainAlign.brain_analysis.metrics"], [1, "module-BrainAlign.brain_analysis.pipeline"], [1, "module-BrainAlign.brain_analysis.process"], [2, "module-BrainAlign.brain_analysis.configs"], [2, "module-BrainAlign.brain_analysis.configs.came_config_binary"], [2, "module-BrainAlign.brain_analysis.configs.heco_config"], [2, "module-BrainAlign.brain_analysis.configs.heco_config_all"], [2, "module-BrainAlign.brain_analysis.configs.heco_config_binary"], [2, "module-BrainAlign.brain_analysis.configs.heco_config_binary_2020sa"], [2, "module-BrainAlign.brain_analysis.configs.heco_config_three_2020sa"], [2, "module-BrainAlign.brain_analysis.configs.sr_rsc_config_binary"], [3, "module-BrainAlign.came"], [3, "module-BrainAlign.came.PARAMETERS"], [3, "module-BrainAlign.came.pipeline"], [4, "module-BrainAlign.came.datapair"], [4, "module-BrainAlign.came.datapair.aligned"], [4, "module-BrainAlign.came.datapair.unaligned"], [5, "module-BrainAlign.came.model"], [5, "module-BrainAlign.came.model.base_layers"], [5, "module-BrainAlign.came.model.cgc"], [5, "module-BrainAlign.came.model.cggc"], [5, "module-BrainAlign.came.model.heteroframe"], [5, "module-BrainAlign.came.model.hidden"], [5, "module-BrainAlign.came.model.loss"], [6, "module-BrainAlign.came.model.v0.cgc"], [6, "module-BrainAlign.came.model.v0.cggc"], [6, "module-BrainAlign.came.model.v0.heteroframe"], [6, "module-BrainAlign.came.model.v0.hidden"], [6, "module-BrainAlign.came.model.v0.loss"], [7, "module-BrainAlign.came.utils"], [7, "module-BrainAlign.came.utils.analyze"], [7, "module-BrainAlign.came.utils.base"], [7, "module-BrainAlign.came.utils.downsample_counts"], [7, "module-BrainAlign.came.utils.evaluation"], [7, "module-BrainAlign.came.utils.plot"], [7, "module-BrainAlign.came.utils.preprocess"], [7, "module-BrainAlign.came.utils.train"], [8, "module-BrainAlign.code"], [8, "module-BrainAlign.code.main_heco"], [9, "module-BrainAlign.code.module"], [9, "module-BrainAlign.code.module.contrast"], [9, "module-BrainAlign.code.module.heco"], [9, "module-BrainAlign.code.module.mp_encoder"], [9, "module-BrainAlign.code.module.sc_encoder"], [10, "module-BrainAlign.code.utils"], [10, "module-BrainAlign.code.utils.evaluate"], [10, "module-BrainAlign.code.utils.load_data"], [10, "module-BrainAlign.code.utils.logger"], [10, "module-BrainAlign.code.utils.logreg"], [10, "module-BrainAlign.code.utils.params"]], "brainalign.brain_analysis": [[1, "module-BrainAlign.brain_analysis"]], "brainalign.brain_analysis.analysis": [[1, "module-BrainAlign.brain_analysis.analysis"]], "brainalign.brain_analysis.analysis_main": [[1, "module-BrainAlign.brain_analysis.analysis_main"]], "brainalign.brain_analysis.analysis_utils": [[1, "module-BrainAlign.brain_analysis.analysis_utils"]], "brainalign.brain_analysis.data_utils": [[1, "module-BrainAlign.brain_analysis.data_utils"]], "brainalign.brain_analysis.metrics": [[1, "module-BrainAlign.brain_analysis.metrics"]], "brainalign.brain_analysis.pipeline": [[1, "module-BrainAlign.brain_analysis.pipeline"]], "brainalign.brain_analysis.process": [[1, "module-BrainAlign.brain_analysis.process"]], "align_cross_species() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.align_cross_species"]], "alignment_sts() (in module brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs"]], "alignment_sts_analysis (class in brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis"]], "analysis_expression() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.analysis_expression"]], "anatomical_sts_analysis (class in brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis"]], "anatomical_sts_analysis_fun() (in module brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis_fun"]], "average_expression() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.average_expression"]], "brain_region_classfier() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.brain_region_classfier"]], "corr2_coeff() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.corr2_coeff"]], "cross_evaluation_aligment() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.cross_evaluation_aligment"]], "cross_evaluation_aligment_cluster() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.cross_evaluation_aligment_cluster"]], "cross_evaluation_aligment_seperate() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.cross_evaluation_aligment_seperate"]], "cross_species_binary_clustering() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.cross_species_binary_clustering"]], "cross_species_genes_clustering() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.cross_species_genes_clustering"]], "experiment_1_cross_species_clustering() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_1_cross_species_clustering"]], "experiment_1_neocortex_analysis() (brainalign.brain_analysis.analysis_main.local_region_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.local_region_analysis.experiment_1_neocortex_analysis"]], "experiment_1_palette_comparison() (brainalign.brain_analysis.analysis_main.anatomical_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis.experiment_1_palette_comparison"]], "experiment_2_spatial_alignment_specie1() (brainalign.brain_analysis.analysis_main.anatomical_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis.experiment_2_spatial_alignment_specie1"]], "experiment_2_spatial_alignment_specie2() (brainalign.brain_analysis.analysis_main.anatomical_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis.experiment_2_spatial_alignment_specie2"]], "experiment_2_umap_evaluation() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_2_umap_evaluation"]], "experiment_3_homo_random() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_3_homo_random"]], "experiment_4_cross_species_genes_analysis() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_4_cross_species_genes_analysis"]], "experiment_5_genes_homo_random() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_5_genes_homo_random"]], "experiment_6_brain_region_classfier() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_6_brain_region_classfier"]], "experiment_7_align_cross_species() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_7_align_cross_species"]], "experiment_8_cross_evaluation_aligment_cluster() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.experiment_8_cross_evaluation_aligment_cluster"]], "forward() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.forward"]], "forward() (brainalign.brain_analysis.analysis_main.anatomical_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.anatomical_STs_analysis.forward"]], "forward() (brainalign.brain_analysis.analysis_main.local_region_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.local_region_analysis.forward"]], "gene_comparison() (in module brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.gene_comparison"]], "gene_module_abstract_graph() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.gene_module_abstract_graph"]], "generate_correlation_map() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.generate_correlation_map"]], "genes_homo_random_corr() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.genes_homo_random_corr"]], "genes_homo_random_distance() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.genes_homo_random_distance"]], "genes_homo_random_distance() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.genes_homo_random_distance"]], "get_center() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.get_center"]], "get_common_special_gene_list() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.get_common_special_gene_list"]], "get_expression_group() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.get_expression_group"]], "get_heco_input() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.get_heco_input"]], "get_homologous_gene_list() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.get_homologous_gene_list"]], "get_homologous_mat() (in module brainalign.brain_analysis.analysis_utils)": [[1, "BrainAlign.brain_analysis.analysis_utils.get_homologous_mat"]], "get_homologous_rate() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.get_homologous_rate"]], "get_neighbor() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.get_neighbor"]], "get_positive_sample() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.get_positive_sample"]], "get_spatial_relation() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.get_spatial_relation"]], "get_srrsc_input() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.get_srrsc_input"]], "highly_variable_hvgs() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.highly_variable_HVGs"]], "homo_corr() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.homo_corr"]], "homo_corr() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.homo_corr"]], "homo_corr_umap() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.homo_corr_umap"]], "identify_markergene() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.identify_markergene"]], "init_data() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.init_data"]], "load_came_embeddings() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.load_came_embeddings"]], "load_embedding() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.load_embedding"]], "load_embeddings_came() (in module brainalign.brain_analysis.pipeline)": [[1, "BrainAlign.brain_analysis.pipeline.load_embeddings_came"]], "load_gene_embedding() (in module brainalign.brain_analysis.pipeline)": [[1, "BrainAlign.brain_analysis.pipeline.load_gene_embedding"]], "load_gene_embedding() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.load_gene_embedding"]], "load_heco_embeddings() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.load_heco_embeddings"]], "load_homo_genes() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.load_homo_genes"]], "load_sample_embedding() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.load_sample_embedding"]], "load_sample_embedding_concat() (in module brainalign.brain_analysis.pipeline)": [[1, "BrainAlign.brain_analysis.pipeline.load_sample_embedding_concat"]], "load_sample_label() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.load_sample_label"]], "load_srrsc_embeddings() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.load_srrsc_embeddings"]], "local_region_analysis (class in brainalign.brain_analysis.analysis_main)": [[1, "BrainAlign.brain_analysis.analysis_main.local_region_analysis"]], "normalize_before_pruning() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.normalize_before_pruning"]], "normalize_default() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.normalize_default"]], "num_zero_rows() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.num_zero_rows"]], "plot_homo_random() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.plot_homo_random"]], "plot_homo_random() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.plot_homo_random"]], "plot_marker_selection_tsne_embedding() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.plot_marker_selection_TSNE_embedding"]], "plot_marker_selection_umap() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.plot_marker_selection_umap"]], "plot_marker_selection_umap_embedding() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.plot_marker_selection_umap_embedding"]], "random_corr() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.random_corr"]], "random_corr() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.random_corr"]], "random_corr_umap() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.random_corr_umap"]], "select_deg() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.select_deg"]], "spatial_alignment() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.spatial_alignment"]], "spatial_alignment_mouse() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.spatial_alignment_mouse"]], "test_interation() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.test_interation"]], "test_normalize() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.test_normalize"]], "test_pruning() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.test_pruning"]], "threshold_array() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.threshold_array"]], "threshold_array_nonzero() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.threshold_array_nonzero"]], "threshold_quantile() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.threshold_quantile"]], "threshold_std() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.threshold_std"]], "threshold_top() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.threshold_top"]], "train_test_val_split() (in module brainalign.brain_analysis.data_utils)": [[1, "BrainAlign.brain_analysis.data_utils.train_test_val_split"]], "transform_embedding() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.transform_embedding"]], "transform_pca_embedding() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.transform_pca_embedding"]], "transform_pca_embedding_np() (in module brainalign.brain_analysis.process)": [[1, "BrainAlign.brain_analysis.process.transform_pca_embedding_np"]], "ttest_homo_random() (brainalign.brain_analysis.analysis_main.alignment_sts_analysis method)": [[1, "BrainAlign.brain_analysis.analysis_main.alignment_STs_analysis.ttest_homo_random"]], "ttest_homo_random() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.ttest_homo_random"]], "umap_genes_seperate() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.umap_genes_seperate"]], "umap_seperate() (in module brainalign.brain_analysis.analysis)": [[1, "BrainAlign.brain_analysis.analysis.umap_seperate"]], "brainalign.brain_analysis.configs": [[2, "module-BrainAlign.brain_analysis.configs"]], "brainalign.brain_analysis.configs.came_config_binary": [[2, "module-BrainAlign.brain_analysis.configs.came_config_binary"]], "brainalign.brain_analysis.configs.heco_config": [[2, "module-BrainAlign.brain_analysis.configs.heco_config"]], "brainalign.brain_analysis.configs.heco_config_all": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_all"]], "brainalign.brain_analysis.configs.heco_config_binary": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_binary"]], "brainalign.brain_analysis.configs.heco_config_binary_2020sa": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_binary_2020sa"]], "brainalign.brain_analysis.configs.heco_config_three_2020sa": [[2, "module-BrainAlign.brain_analysis.configs.heco_config_three_2020sa"]], "brainalign.brain_analysis.configs.sr_rsc_config_binary": [[2, "module-BrainAlign.brain_analysis.configs.sr_rsc_config_binary"]], "brainalign.came": [[3, "module-BrainAlign.came"]], "brainalign.came.parameters": [[3, "module-BrainAlign.came.PARAMETERS"]], "brainalign.came.pipeline": [[3, "module-BrainAlign.came.pipeline"]], "gather_came_results() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.gather_came_results"]], "get_loss_params() (in module brainalign.came.parameters)": [[3, "BrainAlign.came.PARAMETERS.get_loss_params"]], "get_model_params() (in module brainalign.came.parameters)": [[3, "BrainAlign.came.PARAMETERS.get_model_params"]], "main_for_aligned() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.main_for_aligned"]], "main_for_unaligned() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.main_for_unaligned"]], "plot_class_results() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.plot_class_results"]], "preprocess_aligned() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.preprocess_aligned"]], "preprocess_unaligned() (in module brainalign.came.pipeline)": [[3, "BrainAlign.came.pipeline.preprocess_unaligned"]], "aligneddatapair (class in brainalign.came.datapair.aligned)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair"]], "brainalign.came.datapair": [[4, "module-BrainAlign.came.datapair"]], "brainalign.came.datapair.aligned": [[4, "module-BrainAlign.came.datapair.aligned"]], "brainalign.came.datapair.unaligned": [[4, "module-BrainAlign.came.datapair.unaligned"]], "datapair (class in brainalign.came.datapair.unaligned)": [[4, "BrainAlign.came.datapair.unaligned.DataPair"]], "g (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.G"]], "g (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.G"]], "aligned_datapair_from_adatas() (in module brainalign.came.datapair.aligned)": [[4, "BrainAlign.came.datapair.aligned.aligned_datapair_from_adatas"]], "classes (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.classes"]], "classes (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.classes"]], "datapair_from_adatas() (in module brainalign.came.datapair.unaligned)": [[4, "BrainAlign.came.datapair.unaligned.datapair_from_adatas"]], "etypes (brainalign.came.datapair.aligned.aligneddatapair attribute)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.etypes"]], "etypes (brainalign.came.datapair.unaligned.datapair attribute)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.etypes"]], "feat_names1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.feat_names1"]], "feat_names2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.feat_names2"]], "get_feature_dict() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_feature_dict"]], "get_feature_dict() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_feature_dict"]], "get_obs_anno() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_obs_anno"]], "get_obs_anno() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_obs_anno"]], "get_obs_dataset() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_obs_dataset"]], "get_obs_dataset() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_obs_dataset"]], "get_obs_features() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_obs_features"]], "get_obs_features() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_obs_features"]], "get_obs_ids() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_obs_ids"]], "get_obs_ids() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_obs_ids"]], "get_obs_labels() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_obs_labels"]], "get_obs_labels() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_obs_labels"]], "get_vnode_ids() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_vnode_ids"]], "get_vnode_ids_by_name() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_vnode_ids_by_name"]], "get_vnode_names() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_vnode_names"]], "get_whole_net() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.get_whole_net"]], "get_whole_net() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.get_whole_net"]], "labels (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.labels"]], "labels (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.labels"]], "load() (brainalign.came.datapair.aligned.aligneddatapair static method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.load"]], "load() (brainalign.came.datapair.unaligned.datapair static method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.load"]], "make_features() (in module brainalign.came.datapair.unaligned)": [[4, "BrainAlign.came.datapair.unaligned.make_features"]], "make_ov_adj() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.make_ov_adj"]], "make_ov_adj() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.make_ov_adj"]], "make_whole_net() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.make_whole_net"]], "make_whole_net() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.make_whole_net"]], "n_feats (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.n_feats"]], "n_feats (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_feats"]], "n_obs (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.n_obs"]], "n_obs (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_obs"]], "n_obs1 (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.n_obs1"]], "n_obs1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_obs1"]], "n_obs2 (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.n_obs2"]], "n_obs2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_obs2"]], "n_vnodes (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.n_vnodes"]], "n_vnodes (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_vnodes"]], "n_vnodes1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_vnodes1"]], "n_vnodes2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.n_vnodes2"]], "ntypes (brainalign.came.datapair.aligned.aligneddatapair attribute)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.ntypes"]], "ntypes (brainalign.came.datapair.unaligned.datapair attribute)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.ntypes"]], "obs_ids (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.obs_ids"]], "obs_ids (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.obs_ids"]], "obs_ids1 (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.obs_ids1"]], "obs_ids1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.obs_ids1"]], "obs_ids2 (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.obs_ids2"]], "obs_ids2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.obs_ids2"]], "oo_adj (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.oo_adj"]], "oo_adj (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.oo_adj"]], "ov_adj (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.ov_adj"]], "ov_adj (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.ov_adj"]], "save_init() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.save_init"]], "save_init() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.save_init"]], "set_common_obs_annos() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_common_obs_annos"]], "set_common_obs_annos() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_common_obs_annos"]], "set_dataset_names() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_dataset_names"]], "set_dataset_names() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_dataset_names"]], "set_etypes() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_etypes"]], "set_etypes() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_etypes"]], "set_features() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_features"]], "set_features() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_features"]], "set_ntypes() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_ntypes"]], "set_ntypes() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_ntypes"]], "set_obs_dfs() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_obs_dfs"]], "set_obs_dfs() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_obs_dfs"]], "set_oo_adj() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_oo_adj"]], "set_oo_adj() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_oo_adj"]], "set_ov_adj() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_ov_adj"]], "set_ov_adj() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_ov_adj"]], "set_var_dfs() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_var_dfs"]], "set_varnames_node() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.set_varnames_node"]], "set_vnode_annos() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_vnode_annos"]], "set_vv_adj() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.set_vv_adj"]], "summary_graph() (brainalign.came.datapair.aligned.aligneddatapair method)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.summary_graph"]], "summary_graph() (brainalign.came.datapair.unaligned.datapair method)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.summary_graph"]], "var_ids1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.var_ids1"]], "var_ids2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.var_ids2"]], "varnames_feat (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.varnames_feat"]], "varnames_node (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.varnames_node"]], "vnode_ids (brainalign.came.datapair.aligned.aligneddatapair property)": [[4, "BrainAlign.came.datapair.aligned.AlignedDataPair.vnode_ids"]], "vnode_names1 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.vnode_names1"]], "vnode_names2 (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.vnode_names2"]], "vv_adj (brainalign.came.datapair.unaligned.datapair property)": [[4, "BrainAlign.came.datapair.unaligned.DataPair.vv_adj"]], "basemixconvlayer (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer"]], "brainalign.came.model": [[5, "module-BrainAlign.came.model"]], "brainalign.came.model.base_layers": [[5, "module-BrainAlign.came.model.base_layers"]], "brainalign.came.model.cgc": [[5, "module-BrainAlign.came.model.cgc"]], "brainalign.came.model.cggc": [[5, "module-BrainAlign.came.model.cggc"]], "brainalign.came.model.heteroframe": [[5, "module-BrainAlign.came.model.heteroframe"]], "brainalign.came.model.hidden": [[5, "module-BrainAlign.came.model.hidden"]], "brainalign.came.model.loss": [[5, "module-BrainAlign.came.model.loss"]], "cgcnet (class in brainalign.came.model.cgc)": [[5, "BrainAlign.came.model.cgc.CGCNet"]], "cggcnet (class in brainalign.came.model.cggc)": [[5, "BrainAlign.came.model.cggc.CGGCNet"]], "generalrgclayer (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.GeneralRGCLayer"]], "graphattentionlayer (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.GraphAttentionLayer"]], "graphconvlayer (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer"]], "heterographconv (class in brainalign.came.model.heteroframe)": [[5, "BrainAlign.came.model.heteroframe.HeteroGraphConv"]], "heterolayernorm (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.HeteroLayerNorm"]], "hiddenrgcn (class in brainalign.came.model.hidden)": [[5, "BrainAlign.came.model.hidden.HiddenRGCN"]], "hiddenrrgcn (class in brainalign.came.model.hidden)": [[5, "BrainAlign.came.model.hidden.HiddenRRGCN"]], "labelsmoothingcrossentropy (class in brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.LabelSmoothingCrossEntropy"]], "relgraphconvlayer (class in brainalign.came.model.base_layers)": [[5, "BrainAlign.came.model.base_layers.RelGraphConvLayer"]], "apply_out() (brainalign.came.model.base_layers.basemixconvlayer method)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.apply_out"]], "bias (brainalign.came.model.base_layers.graphconvlayer attribute)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.bias"]], "build_biases() (brainalign.came.model.base_layers.basemixconvlayer method)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.build_biases"]], "build_layernorm() (brainalign.came.model.base_layers.basemixconvlayer method)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.build_layernorm"]], "build_mix_conv() (brainalign.came.model.base_layers.basemixconvlayer method)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.build_mix_conv"]], "ce_loss_with_rdrop() (in module brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.ce_loss_with_rdrop"]], "classification_loss() (in module brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.classification_loss"]], "compute_kl_loss() (in module brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.compute_kl_loss"]], "cross_entropy_loss() (in module brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.cross_entropy_loss"]], "detach2numpy() (in module brainalign.came.model.cgc)": [[5, "BrainAlign.came.model.cgc.detach2numpy"]], "detach2numpy() (in module brainalign.came.model.cggc)": [[5, "BrainAlign.came.model.cggc.detach2numpy"]], "extra_repr() (brainalign.came.model.base_layers.graphconvlayer method)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.extra_repr"]], "forward() (brainalign.came.model.base_layers.basemixconvlayer method)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.forward"]], "forward() (brainalign.came.model.base_layers.generalrgclayer method)": [[5, "BrainAlign.came.model.base_layers.GeneralRGCLayer.forward"]], "forward() (brainalign.came.model.base_layers.graphattentionlayer method)": [[5, "BrainAlign.came.model.base_layers.GraphAttentionLayer.forward"]], "forward() (brainalign.came.model.base_layers.graphconvlayer method)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.forward"]], "forward() (brainalign.came.model.base_layers.heterolayernorm method)": [[5, "BrainAlign.came.model.base_layers.HeteroLayerNorm.forward"]], "forward() (brainalign.came.model.base_layers.relgraphconvlayer method)": [[5, "BrainAlign.came.model.base_layers.RelGraphConvLayer.forward"]], "forward() (brainalign.came.model.cggc.cggcnet method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.forward"]], "forward() (brainalign.came.model.heteroframe.heterographconv method)": [[5, "BrainAlign.came.model.heteroframe.HeteroGraphConv.forward"]], "forward() (brainalign.came.model.hidden.hiddenrgcn method)": [[5, "BrainAlign.came.model.hidden.HiddenRGCN.forward"]], "forward() (brainalign.came.model.hidden.hiddenrrgcn method)": [[5, "BrainAlign.came.model.hidden.HiddenRRGCN.forward"]], "forward() (brainalign.came.model.loss.labelsmoothingcrossentropy method)": [[5, "BrainAlign.came.model.loss.LabelSmoothingCrossEntropy.forward"]], "get_attentions() (brainalign.came.model.cggc.cggcnet method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.get_attentions"]], "get_classification_loss() (brainalign.came.model.cggc.cggcnet static method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.get_classification_loss"]], "get_hidden_states() (brainalign.came.model.cggc.cggcnet method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.get_hidden_states"]], "get_out_logits() (brainalign.came.model.cggc.cggcnet method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.get_out_logits"]], "get_sampler() (brainalign.came.model.cggc.cggcnet method)": [[5, "BrainAlign.came.model.cggc.CGGCNet.get_sampler"]], "mods (brainalign.came.model.heteroframe.heterographconv attribute)": [[5, "BrainAlign.came.model.heteroframe.HeteroGraphConv.mods"]], "multilabel_binary_cross_entropy() (in module brainalign.came.model.loss)": [[5, "BrainAlign.came.model.loss.multilabel_binary_cross_entropy"]], "reset_parameters() (brainalign.came.model.base_layers.graphattentionlayer method)": [[5, "BrainAlign.came.model.base_layers.GraphAttentionLayer.reset_parameters"]], "reset_parameters() (brainalign.came.model.base_layers.graphconvlayer method)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.reset_parameters"]], "training (brainalign.came.model.base_layers.basemixconvlayer attribute)": [[5, "BrainAlign.came.model.base_layers.BaseMixConvLayer.training"]], "training (brainalign.came.model.base_layers.generalrgclayer attribute)": [[5, "BrainAlign.came.model.base_layers.GeneralRGCLayer.training"]], "training (brainalign.came.model.base_layers.graphattentionlayer attribute)": [[5, "BrainAlign.came.model.base_layers.GraphAttentionLayer.training"]], "training (brainalign.came.model.base_layers.graphconvlayer attribute)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.training"]], "training (brainalign.came.model.base_layers.heterolayernorm attribute)": [[5, "BrainAlign.came.model.base_layers.HeteroLayerNorm.training"]], "training (brainalign.came.model.base_layers.relgraphconvlayer attribute)": [[5, "BrainAlign.came.model.base_layers.RelGraphConvLayer.training"]], "training (brainalign.came.model.cgc.cgcnet attribute)": [[5, "BrainAlign.came.model.cgc.CGCNet.training"]], "training (brainalign.came.model.cggc.cggcnet attribute)": [[5, "BrainAlign.came.model.cggc.CGGCNet.training"]], "training (brainalign.came.model.heteroframe.heterographconv attribute)": [[5, "BrainAlign.came.model.heteroframe.HeteroGraphConv.training"]], "training (brainalign.came.model.hidden.hiddenrgcn attribute)": [[5, "BrainAlign.came.model.hidden.HiddenRGCN.training"]], "training (brainalign.came.model.hidden.hiddenrrgcn attribute)": [[5, "BrainAlign.came.model.hidden.HiddenRRGCN.training"]], "training (brainalign.came.model.loss.labelsmoothingcrossentropy attribute)": [[5, "BrainAlign.came.model.loss.LabelSmoothingCrossEntropy.training"]], "weight (brainalign.came.model.base_layers.graphconvlayer attribute)": [[5, "BrainAlign.came.model.base_layers.GraphConvLayer.weight"]], "brainalign.came.model.v0.cgc": [[6, "module-BrainAlign.came.model.v0.cgc"]], "brainalign.came.model.v0.cggc": [[6, "module-BrainAlign.came.model.v0.cggc"]], "brainalign.came.model.v0.heteroframe": [[6, "module-BrainAlign.came.model.v0.heteroframe"]], "brainalign.came.model.v0.hidden": [[6, "module-BrainAlign.came.model.v0.hidden"]], "brainalign.came.model.v0.loss": [[6, "module-BrainAlign.came.model.v0.loss"]], "cgcnet (class in brainalign.came.model.v0.cgc)": [[6, "BrainAlign.came.model.v0.cgc.CGCNet"]], "cggcnet (class in brainalign.came.model.v0.cggc)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet"]], "heterographconv (class in brainalign.came.model.v0.heteroframe)": [[6, "BrainAlign.came.model.v0.heteroframe.HeteroGraphConv"]], "hiddenrgcn (class in brainalign.came.model.v0.hidden)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRGCN"]], "hiddenrrgcn (class in brainalign.came.model.v0.hidden)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRRGCN"]], "labelsmoothingcrossentropy (class in brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.LabelSmoothingCrossEntropy"]], "ce_loss_with_rdrop() (in module brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.ce_loss_with_rdrop"]], "classification_loss() (in module brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.classification_loss"]], "compute_kl_loss() (in module brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.compute_kl_loss"]], "cross_entropy_loss() (in module brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.cross_entropy_loss"]], "detach2numpy() (in module brainalign.came.model.v0.cgc)": [[6, "BrainAlign.came.model.v0.cgc.detach2numpy"]], "detach2numpy() (in module brainalign.came.model.v0.cggc)": [[6, "BrainAlign.came.model.v0.cggc.detach2numpy"]], "forward() (brainalign.came.model.v0.cggc.cggcnet method)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.forward"]], "forward() (brainalign.came.model.v0.heteroframe.heterographconv method)": [[6, "BrainAlign.came.model.v0.heteroframe.HeteroGraphConv.forward"]], "forward() (brainalign.came.model.v0.hidden.hiddenrgcn method)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRGCN.forward"]], "forward() (brainalign.came.model.v0.hidden.hiddenrrgcn method)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRRGCN.forward"]], "forward() (brainalign.came.model.v0.loss.labelsmoothingcrossentropy method)": [[6, "BrainAlign.came.model.v0.loss.LabelSmoothingCrossEntropy.forward"]], "get_attentions() (brainalign.came.model.v0.cggc.cggcnet method)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.get_attentions"]], "get_classification_loss() (brainalign.came.model.v0.cggc.cggcnet static method)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.get_classification_loss"]], "get_hidden_states() (brainalign.came.model.v0.cggc.cggcnet method)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.get_hidden_states"]], "get_out_logits() (brainalign.came.model.v0.cggc.cggcnet method)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.get_out_logits"]], "mods (brainalign.came.model.v0.heteroframe.heterographconv attribute)": [[6, "BrainAlign.came.model.v0.heteroframe.HeteroGraphConv.mods"]], "multilabel_binary_cross_entropy() (in module brainalign.came.model.v0.loss)": [[6, "BrainAlign.came.model.v0.loss.multilabel_binary_cross_entropy"]], "training (brainalign.came.model.v0.cgc.cgcnet attribute)": [[6, "BrainAlign.came.model.v0.cgc.CGCNet.training"]], "training (brainalign.came.model.v0.cggc.cggcnet attribute)": [[6, "BrainAlign.came.model.v0.cggc.CGGCNet.training"]], "training (brainalign.came.model.v0.heteroframe.heterographconv attribute)": [[6, "BrainAlign.came.model.v0.heteroframe.HeteroGraphConv.training"]], "training (brainalign.came.model.v0.hidden.hiddenrgcn attribute)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRGCN.training"]], "training (brainalign.came.model.v0.hidden.hiddenrrgcn attribute)": [[6, "BrainAlign.came.model.v0.hidden.HiddenRRGCN.training"]], "training (brainalign.came.model.v0.loss.labelsmoothingcrossentropy attribute)": [[6, "BrainAlign.came.model.v0.loss.LabelSmoothingCrossEntropy.training"]], "adjacenttrans (class in brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans"]], "brainalign.came.utils": [[7, "module-BrainAlign.came.utils"]], "brainalign.came.utils.analyze": [[7, "module-BrainAlign.came.utils.analyze"]], "brainalign.came.utils.base": [[7, "module-BrainAlign.came.utils.base"]], "brainalign.came.utils.downsample_counts": [[7, "module-BrainAlign.came.utils.downsample_counts"]], "brainalign.came.utils.evaluation": [[7, "module-BrainAlign.came.utils.evaluation"]], "brainalign.came.utils.plot": [[7, "module-BrainAlign.came.utils.plot"]], "brainalign.came.utils.preprocess": [[7, "module-BrainAlign.came.utils.preprocess"]], "brainalign.came.utils.train": [[7, "module-BrainAlign.came.utils.train"]], "t() (brainalign.came.utils.preprocess.adjacenttrans method)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans.T"]], "trainer (class in brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.Trainer"]], "abstract_nodes() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.abstract_nodes"]], "abstract_ov_edges() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.abstract_ov_edges"]], "abstract_vv_edges() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.abstract_vv_edges"]], "accuracy() (in module brainalign.came.utils.evaluation)": [[7, "BrainAlign.came.utils.evaluation.accuracy"]], "adata_embed_with_values() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.adata_embed_with_values"]], "adata_from_raw() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.adata_from_raw"]], "adata_subgroup_edges() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.adata_subgroup_edges"]], "add_columns() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.add_columns"]], "add_new_edgetype_to_dglgraph() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.add_new_edgetype_to_dglgraph"]], "add_obs_annos() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.add_obs_annos"]], "add_var_annos() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.add_var_annos"]], "adj_to_edges() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.adj_to_edges"]], "agg_group_edges() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.agg_group_edges"]], "aggregate_links() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.aggregate_links"]], "align_adata_vars() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.align_adata_vars"]], "all_vars_of_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.all_vars_of_adata"]], "alluvial_plot() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.alluvial_plot"]], "arrange_contingency_mat() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.arrange_contingency_mat"]], "augment_repeat_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.augment_repeat_adata"]], "bisplit_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.bisplit_adata"]], "change_names() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.change_names"]], "check_dirs() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.check_dirs"]], "compare_deg_dicts() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.compare_deg_dicts"]], "compare_degs_adata() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.compare_degs_adata"]], "compare_degs_seurat() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.compare_degs_seurat"]], "compare_modules() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.compare_modules"]], "compute_and_get_degs() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.compute_and_get_DEGs"]], "compute_common_private() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.compute_common_private"]], "compute_unkn_rate() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.compute_unkn_rate"]], "compute_unkn_rate_for2() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.compute_unkn_rate_for2"]], "dec_timewrapper() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.dec_timewrapper"]], "describe_mat() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.describe_mat"]], "describe_mat_nnz() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.describe_mat_nnz"]], "dict_has_keys() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.dict_has_keys"]], "dict_struct() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.dict_struct"]], "dict_to_pairs() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.dict_to_pairs"]], "diy_cmap_grey_bg() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.diy_cmap_grey_bg"]], "downsample_counts() (in module brainalign.came.utils.downsample_counts)": [[7, "BrainAlign.came.utils.downsample_counts.downsample_counts"]], "downsample_counts_per_cell() (in module brainalign.came.utils.downsample_counts)": [[7, "BrainAlign.came.utils.downsample_counts.downsample_counts_per_cell"]], "downsample_total_counts() (in module brainalign.came.utils.downsample_counts)": [[7, "BrainAlign.came.utils.downsample_counts.downsample_total_counts"]], "edges_from_adata() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.edges_from_adata"]], "embed_with_values() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.embed_with_values"]], "embedding_mock3d() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.embedding_mock3d"]], "evaluate_metrics() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.evaluate_metrics"]], "export_neighbor_subgraph_df() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.export_neighbor_subgraph_df"]], "export_subgraph_df() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.export_subgraph_df"]], "filter_mitogenes() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.filter_mitogenes"]], "from_edge_df() (brainalign.came.utils.preprocess.adjacenttrans static method)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans.from_edge_df"]], "get_ami() (in module brainalign.came.utils.evaluation)": [[7, "BrainAlign.came.utils.evaluation.get_AMI"]], "get_f1_score() (in module brainalign.came.utils.evaluation)": [[7, "BrainAlign.came.utils.evaluation.get_F1_score"]], "get_adata_neighbors() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.get_adata_neighbors"]], "get_colors() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.get_colors"]], "get_current_outputs() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.get_current_outputs"]], "get_homologies() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_homologies"]], "get_homologues() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_homologues"]], "get_hvgs() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_hvgs"]], "get_marker_info_table() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_marker_info_table"]], "get_marker_name_table() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_marker_name_table"]], "get_scnet() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.get_scnet"]], "grid_bars_display_probas() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.grid_bars_display_probas"]], "grid_bars_display_probas_transposed() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.grid_bars_display_probas_transposed"]], "grid_display_probas() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.grid_display_probas"]], "group_mean() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_mean"]], "group_mean_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_mean_adata"]], "group_mean_dense() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_mean_dense"]], "group_mean_multiadata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_mean_multiadata"]], "group_mean_sparse() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_mean_sparse"]], "group_median_dense() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_median_dense"]], "group_value_counts() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_value_counts"]], "group_zscore() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_zscore"]], "group_zscore_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.group_zscore_adata"]], "heatmap() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.heatmap"]], "heatmap_probas() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.heatmap_probas"]], "homograph_from_scipy() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.homograph_from_scipy"]], "infer_for_nodes() (in module brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.infer_for_nodes"]], "is1v1pairs() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.is1v1pairs"]], "is_symetric() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.is_symetric"]], "label_binarize_each() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.label_binarize_each"]], "load_dense() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.load_dense"]], "load_dpair_and_model() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.load_dpair_and_model"]], "load_json_dict() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.load_json_dict"]], "load_namelist() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.load_namelist"]], "load_pickle() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.load_pickle"]], "load_sparse() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.load_sparse"]], "log_info() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.log_info"]], "make_abstracted_graph() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.make_abstracted_graph"]], "make_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.make_adata"]], "make_bipartite_adj() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.make_bipartite_adj"]], "make_class_weights() (in module brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.make_class_weights"]], "make_dict_from_str() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.make_dict_from_str"]], "make_id_name_maps() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.make_id_name_maps"]], "make_nowtime_tag() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.make_nowtime_tag"]], "make_nx_input_from_df() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.make_nx_input_from_df"]], "make_pairs_from_lists() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.make_pairs_from_lists"]], "map_by_sme() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.map_by_sme"]], "mean_of_nozeros() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.mean_of_nozeros"]], "merge_adata_groups() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.merge_adata_groups"]], "merge_adatas() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.merge_adatas"]], "merge_group_labels() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.merge_group_labels"]], "merge_metas() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.merge_metas"]], "merge_named_matrices() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.merge_named_matrices"]], "module_enrichment_for_classes() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.module_enrichment_for_classes"]], "module_homo_weights() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.module_homo_weights"]], "mtx2df() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.mtx2df"]], "multipartite_layout() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.multipartite_layout"]], "neighbor_induced_edgedf() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.neighbor_induced_edgedf"]], "neighbor_induced_subgraph() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.neighbor_induced_subgraph"]], "normalize_col() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_col"]], "normalize_default() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_default"]], "normalize_log_then_total() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_log_then_total"]], "normalize_max() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_max"]], "normalize_maxmin() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_maxmin"]], "normalize_norms() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_norms"]], "normalize_row() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.normalize_row"]], "nx_from_adata() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.nx_from_adata"]], "nx_multipartite_graph() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.nx_multipartite_graph"]], "nx_neighbors() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.nx_neighbors"]], "nx_to_dfs() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.nx_to_dfs"]], "nx_to_nodedf() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.nx_to_nodedf"]], "order_by_ids() (in module brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.order_by_ids"]], "order_contingency_mat() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.order_contingency_mat"]], "pairs_to_dict() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.pairs_to_dict"]], "pivot_df_to_sparse() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.pivot_df_to_sparse"]], "pivot_to_sparse() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.pivot_to_sparse"]], "plot_class_accs() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.plot_class_accs"]], "plot_class_losses() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.plot_class_losses"]], "plot_cluster_index() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.plot_cluster_index"]], "plot_confus_mat() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_confus_mat"]], "plot_confus_multi_mats() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_confus_multi_mats"]], "plot_contingency_mat() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_contingency_mat"]], "plot_distance_lines() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_distance_lines"]], "plot_edges_by_adj() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_edges_by_adj"]], "plot_line_list() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_line_list"]], "plot_mapped_graph() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_mapped_graph"]], "plot_multipartite_graph() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_multipartite_graph"]], "plot_records_for_trainer() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_records_for_trainer"]], "plot_splitted_umaps() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_splitted_umaps"]], "plot_stacked_bar() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.plot_stacked_bar"]], "prepare4train() (in module brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.prepare4train"]], "quick_pre_clust() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.quick_pre_clust"]], "quick_pre_vis() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.quick_pre_vis"]], "quick_preprocess() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.quick_preprocess"]], "reduce_to_align() (brainalign.came.utils.preprocess.adjacenttrans method)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans.reduce_to_align"]], "reduce_to_align() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.reduce_to_align"]], "reduce_to_align_features() (brainalign.came.utils.preprocess.adjacenttrans method)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans.reduce_to_align_features"]], "regu_gname() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.regu_gname"]], "remove_adata_groups() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.remove_adata_groups"]], "remove_adata_small_groups() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.remove_adata_small_groups"]], "remove_small_groups() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.remove_small_groups"]], "rescale_layout() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.rescale_layout"]], "reverse_dict() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.reverse_dict"]], "reverse_dict_of_list() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.reverse_dict_of_list"]], "rotate_xticklabels() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.rotate_xticklabels"]], "rotate_yticklabels() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.rotate_yticklabels"]], "save_json_dict() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.save_json_dict"]], "save_mtx2df() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.save_mtx2df"]], "save_named_mtx() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.save_named_mtx"]], "save_namelist() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.save_namelist"]], "save_pickle() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.save_pickle"]], "scipy_edge_dict_for_dgl() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.scipy_edge_dict_for_dgl"]], "seed_everything() (in module brainalign.came.utils.train)": [[7, "BrainAlign.came.utils.train.seed_everything"]], "set_class_weights() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.set_class_weights"]], "set_precomputed_neighbors() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.set_precomputed_neighbors"]], "shape (brainalign.came.utils.preprocess.adjacenttrans property)": [[7, "BrainAlign.came.utils.preprocess.AdjacentTrans.shape"]], "sorted_scatter() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.sorted_scatter"]], "split_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.split_adata"]], "split_df() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.split_df"]], "strline() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.strline"]], "subsample_each_group() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.subsample_each_group"]], "subsample_single() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.subsample_single"]], "subset_matches() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.subset_matches"]], "take_1v1_matches() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.take_1v1_matches"]], "take_adata_groups() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.take_adata_groups"]], "take_freq1() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.take_freq1"]], "take_freq1more() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.take_freq1more"]], "take_group_labels() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.take_group_labels"]], "top_markers_from_adata() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.top_markers_from_adata"]], "top_markers_from_df() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.top_markers_from_df"]], "top_markers_from_info() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.top_markers_from_info"]], "train() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.train"]], "train_minibatch() (brainalign.came.utils.train.trainer method)": [[7, "BrainAlign.came.utils.train.Trainer.train_minibatch"]], "triple_umaps() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.triple_umaps"]], "umap_grid() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.umap_grid"]], "umap_with_annotates() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.umap_with_annotates"]], "unpack_dict_of_lists() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.unpack_dict_of_lists"]], "venn_plot() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.venn_plot"]], "view_color_map() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.view_color_map"]], "weight_linked_vars() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.weight_linked_vars"]], "weight_linked_vars_by_expr() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.weight_linked_vars_by_expr"]], "weight_normalize_by_size() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.weight_normalize_by_size"]], "wrapper_confus_mat() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.wrapper_confus_mat"]], "wrapper_contingency_mat() (in module brainalign.came.utils.analyze)": [[7, "BrainAlign.came.utils.analyze.wrapper_contingency_mat"]], "wrapper_heatmap_scores() (in module brainalign.came.utils.plot)": [[7, "BrainAlign.came.utils.plot.wrapper_heatmap_scores"]], "wrapper_normalize() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.wrapper_normalize"]], "wrapper_scale() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.wrapper_scale"]], "write_info() (in module brainalign.came.utils.base)": [[7, "BrainAlign.came.utils.base.write_info"]], "zscore() (in module brainalign.came.utils.preprocess)": [[7, "BrainAlign.came.utils.preprocess.zscore"]], "brainalign.code": [[8, "module-BrainAlign.code"]], "brainalign.code.main_heco": [[8, "module-BrainAlign.code.main_heco"]], "run_heco() (in module brainalign.code.main_heco)": [[8, "BrainAlign.code.main_heco.run_heco"]], "train() (in module brainalign.code.main_heco)": [[8, "BrainAlign.code.main_heco.train"]], "attention (class in brainalign.code.module.mp_encoder)": [[9, "BrainAlign.code.module.mp_encoder.Attention"]], "brainalign.code.module": [[9, "module-BrainAlign.code.module"]], "brainalign.code.module.contrast": [[9, "module-BrainAlign.code.module.contrast"]], "brainalign.code.module.heco": [[9, "module-BrainAlign.code.module.heco"]], "brainalign.code.module.mp_encoder": [[9, "module-BrainAlign.code.module.mp_encoder"]], "brainalign.code.module.sc_encoder": [[9, "module-BrainAlign.code.module.sc_encoder"]], "contrast (class in brainalign.code.module.contrast)": [[9, "BrainAlign.code.module.contrast.Contrast"]], "gcn (class in brainalign.code.module.mp_encoder)": [[9, "BrainAlign.code.module.mp_encoder.GCN"]], "heco (class in brainalign.code.module.heco)": [[9, "BrainAlign.code.module.heco.HeCo"]], "mp_encoder (class in brainalign.code.module.mp_encoder)": [[9, "BrainAlign.code.module.mp_encoder.Mp_encoder"]], "sc_encoder (class in brainalign.code.module.sc_encoder)": [[9, "BrainAlign.code.module.sc_encoder.Sc_encoder"]], "forward() (brainalign.code.module.contrast.contrast method)": [[9, "BrainAlign.code.module.contrast.Contrast.forward"]], "forward() (brainalign.code.module.heco.heco method)": [[9, "BrainAlign.code.module.heco.HeCo.forward"]], "forward() (brainalign.code.module.mp_encoder.attention method)": [[9, "BrainAlign.code.module.mp_encoder.Attention.forward"]], "forward() (brainalign.code.module.mp_encoder.gcn method)": [[9, "BrainAlign.code.module.mp_encoder.GCN.forward"]], "forward() (brainalign.code.module.mp_encoder.mp_encoder method)": [[9, "BrainAlign.code.module.mp_encoder.Mp_encoder.forward"]], "forward() (brainalign.code.module.sc_encoder.sc_encoder method)": [[9, "BrainAlign.code.module.sc_encoder.Sc_encoder.forward"]], "forward() (brainalign.code.module.sc_encoder.inter_att method)": [[9, "BrainAlign.code.module.sc_encoder.inter_att.forward"]], "forward() (brainalign.code.module.sc_encoder.intra_att method)": [[9, "BrainAlign.code.module.sc_encoder.intra_att.forward"]], "get_embeds() (brainalign.code.module.heco.heco method)": [[9, "BrainAlign.code.module.heco.HeCo.get_embeds"]], "inter_att (class in brainalign.code.module.sc_encoder)": [[9, "BrainAlign.code.module.sc_encoder.inter_att"]], "intra_att (class in brainalign.code.module.sc_encoder)": [[9, "BrainAlign.code.module.sc_encoder.intra_att"]], "sim() (brainalign.code.module.contrast.contrast method)": [[9, "BrainAlign.code.module.contrast.Contrast.sim"]], "training (brainalign.code.module.contrast.contrast attribute)": [[9, "BrainAlign.code.module.contrast.Contrast.training"]], "training (brainalign.code.module.heco.heco attribute)": [[9, "BrainAlign.code.module.heco.HeCo.training"]], "training (brainalign.code.module.mp_encoder.attention attribute)": [[9, "BrainAlign.code.module.mp_encoder.Attention.training"]], "training (brainalign.code.module.mp_encoder.gcn attribute)": [[9, "BrainAlign.code.module.mp_encoder.GCN.training"]], "training (brainalign.code.module.mp_encoder.mp_encoder attribute)": [[9, "BrainAlign.code.module.mp_encoder.Mp_encoder.training"]], "training (brainalign.code.module.sc_encoder.sc_encoder attribute)": [[9, "BrainAlign.code.module.sc_encoder.Sc_encoder.training"]], "training (brainalign.code.module.sc_encoder.inter_att attribute)": [[9, "BrainAlign.code.module.sc_encoder.inter_att.training"]], "training (brainalign.code.module.sc_encoder.intra_att attribute)": [[9, "BrainAlign.code.module.sc_encoder.intra_att.training"]], "weights_init() (brainalign.code.module.mp_encoder.gcn method)": [[9, "BrainAlign.code.module.mp_encoder.GCN.weights_init"]], "brainalign.code.utils": [[10, "module-BrainAlign.code.utils"]], "brainalign.code.utils.evaluate": [[10, "module-BrainAlign.code.utils.evaluate"]], "brainalign.code.utils.load_data": [[10, "module-BrainAlign.code.utils.load_data"]], "brainalign.code.utils.logger": [[10, "module-BrainAlign.code.utils.logger"]], "brainalign.code.utils.logreg": [[10, "module-BrainAlign.code.utils.logreg"]], "brainalign.code.utils.params": [[10, "module-BrainAlign.code.utils.params"]], "logreg (class in brainalign.code.utils.logreg)": [[10, "BrainAlign.code.utils.logreg.LogReg"]], "acm_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.acm_params"]], "aminer_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.aminer_params"]], "dblp_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.dblp_params"]], "encode_onehot() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.encode_onehot"]], "evaluate() (in module brainalign.code.utils.evaluate)": [[10, "BrainAlign.code.utils.evaluate.evaluate"]], "forward() (brainalign.code.utils.logreg.logreg method)": [[10, "BrainAlign.code.utils.logreg.LogReg.forward"]], "freebase_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.freebase_params"]], "load_acm() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_acm"]], "load_aminer() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_aminer"]], "load_data() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_data"]], "load_dblp() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_dblp"]], "load_freebase() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_freebase"]], "load_mouse_human() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_mouse_human"]], "load_mouse_human_binary() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_mouse_human_binary"]], "load_mouse_human_sagittal() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_mouse_human_sagittal"]], "load_mouse_human_three() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.load_mouse_human_three"]], "mouse_human_all_binary_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.mouse_human_all_binary_params"]], "mouse_human_binary_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.mouse_human_binary_params"]], "mouse_human_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.mouse_human_params"]], "mouse_human_sagittal_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.mouse_human_sagittal_params"]], "normalize_adj() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.normalize_adj"]], "preprocess_features() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.preprocess_features"]], "set_params() (in module brainalign.code.utils.params)": [[10, "BrainAlign.code.utils.params.set_params"]], "setup_logger() (in module brainalign.code.utils.logger)": [[10, "BrainAlign.code.utils.logger.setup_logger"]], "sparse_mx_to_torch_sparse_tensor() (in module brainalign.code.utils.load_data)": [[10, "BrainAlign.code.utils.load_data.sparse_mx_to_torch_sparse_tensor"]], "training (brainalign.code.utils.logreg.logreg attribute)": [[10, "BrainAlign.code.utils.logreg.LogReg.training"]], "weights_init() (brainalign.code.utils.logreg.logreg method)": [[10, "BrainAlign.code.utils.logreg.LogReg.weights_init"]]}})